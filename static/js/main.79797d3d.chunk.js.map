{"version":3,"sources":["components/historypage/AllTimeRecording/AllTimeRecording.js","components/historypage/HighScoreMeditation/HighScoreMeditation.js","components/historypage/HistoryElement/HistoryElement.js","components/historypage/calendar/Calendar.jsx","components/historypage/calendar/CalendarContainer.jsx","components/historypage/HistoryPage.jsx","components/historypage/HistoryPageContainer.jsx","assets/images/logo.png","components/header/Header.jsx","assets/sounds/sound.mp3","components/homepage/Button/Button.jsx","components/homepage/Display/Display.jsx","assets/timer/play-button.png","assets/timer/pause-button.png","components/homepage/TimeInput/StartPauseBtn.jsx","assets/timer/stop-button.png","components/homepage/TimeInput/StopBtn.jsx","components/homepage/TimeInput/TimeInput.jsx","components/homepage/Modal/Modal.jsx","assets/sounds/Infinitely.mp3","store/store.js","assets/sounds/Spatium.mp3","assets/sounds/Tea.mp3","components/homepage/timer/Timer.jsx","components/homepage/timer/TimerContainer.jsx","assets/player/play-button.png","assets/player/next-button.png","assets/player/back-button.png","assets/player/pause-button.png","assets/player/stop-button.png","assets/player/reload.png","components/homepage/AudioPleer/AudioPleer.jsx","components/homepage/AudioPleer/AudioPleerContainer.jsx","components/homepage/HomePage.jsx","components/signup/Signup.jsx","components/signin/SignIn.jsx","App.js","reportWebVitals.js","index.js"],"names":["AllTimeRecording","allTimeRecording","className","HighScoreMeditation","props","regDay","history","sessionsHistory","map","e","date","newTry","rawNum","match","Number","firstDay","index","array","pushh","skipNumber","length","includes","secondDay","push","y","nextDays","filter","value","self","indexOf","undefined","arrLengths","i","theGreatest","HistoryElement","historyElement","el","duration","Calendar","currentMonth","Date","getMonth","currentYear","getFullYear","createCalendar","selectedMonth","m","isMore","dayOfWeekElements","numberOfDays","getDate","CalendarElements","day","month","year","filterObj","some","obj","lateDate","blankFirstDays","getDay","getDayOfWeek","monthName","unshift","dayElements","checkLastYear","prevM","previousMonth","monthBeforePrevious","prevPrevMonth","prevMonth","ongoingMonth","CalendarContainer","connect","state","HistoryPage","HistoryPageContainer","Header","useState","popupStatus","setPopupStatus","hamb__fieldStatus","setHamb__fieldStatus","hambDivHandler","onClick","to","src","logo","id","Button","disabled","time","setNewTimeLeft","startTimer","Display","useEffect","timeLeft","setIsTimeLeftOrExtraTime","isTimeLeftOrExtraTime","toMinAndSecs","digit","rawHours","Math","floor","rawMins","rawSecs","extraTime","StartPauseBtn","timerIsOn","PauseBtn","StartBtn","addedTime","startPauseResume","setAddedTime","StopBtn","stopBtn","openModal","TimeInput","isDisabled","type","onKeyUp","event","keyCode","clickHandler","onChange","target","min","placeholder","Modal","modalActive","setModalActive","stopSave","stopNoSave","stopPropagation","name","initialState","autoplayIsOn","rawSongNames","Infinitely","currentSong","songIndex","pauseMusic","SET_NEW_TIMELEFT_AC","SET_NEW_SESSIONS_HISTORY_AC","TURN_AUTOPLAY_ON_OFF_AC","CHOOSE_CURRENT_SONG_AC","CHOOSE_SONG_INDEX_AC","TIMER_IS_ON_AC","PAUSE_MUSIC_AC","SET_ALL_TIME_RECORDING_AC","chooseSongIndexAC","newSongIndex","chooseCurrentSongAC","song","pauseMusicAC","pause","store","createStore","action","newRecord","TimerWrapper","setTimerIsOn","timerIsPaused","setTimerIsPaused","setExtraTime","extraTimerID","setExtraTimerID","timerIntervalID","setTimerIntervalID","forStory","setForStory","notif","useRef","nowDate","clearInterval","decreasingTimeLeft","newTimerID","setInterval","current","play","newExtraTimerID","extraTimerStarter","stopTimer","timer","alert","forRecord","setNewSessionsHistory","setAllTimeRecording","ref","preload","sound","TimerContainer","dispatch","chooseSongIndex","chooseSong","timerIsOnAC","newTimeLeft","setNewTimeLeftAC","newDuration","newDate","setNewSessionsHistoryAC","record","setAllTimeRecordingAC","TestNewTimer","AudioPleer","document","title","audioP","addEventListener","updateProgress","getFullDuration","prgrsCont","setProgress","currentTime","setCurrentTime","fullDuration","setFullDuration","isPlaying","setIsPlaying","btn","prgrs","stopMusic","propersSongNames","redesingTime","secs","hr","sec","progressPercent","style","width","carrTime","toString","this","clientWidth","clickX","offsetX","btnPrev","a","increaseIndex","btnNext","loop","btnPause","btnPlay","btnStop","btnReload","turnAutoPlayOnOff","AudioPleerContainer","autoplayStatus","turnAutoPlayOnOffAC","HomePage","pleerIsOn","setPleerIsOn","SignUpPage","SignInPage","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","content","getElementById"],"mappings":"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","file":"static/js/main.79797d3d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction AllTimeRecording ({allTimeRecording}) {\r\n     return allTimeRecording ? \r\n        <div className=\"backing fields historyElems\">\r\n        <h3>Проведено в медитации:</h3>\r\n        <h2> {allTimeRecording} секунд </h2>\r\n        </div> \r\n        : \r\n        <div></div>\r\n        }\r\n\r\n    \r\n\r\n\r\nexport default AllTimeRecording","import React from \"react\";\r\nimport './HighScoreMeditation.css'\r\n\r\nfunction HighScoreMeditation(props) {\r\n    // Ваш рекорд медитации\r\n    const regDay = /(\\d{1,2})\\.[\\.0-9]+/\r\n\r\n    let toShtoNuzhno = ['18.1.2022', '21.1.2022', '22.1.2022', '25.1.2022', '26.1.2022', '28.1.2022', '29.1.2022', '30.1.2022', '31.1.2022', '32.1.2022', '33.1.2022', '34.1.2022', '35.1.2022', '36.1.2022', '13.1.2022', '14.1.2022', '39.1.2022', '40.1.2022', '41.1.2022', '42.1.2022',]\r\n\r\n\r\n    let history = props.sessionsHistory.map(e => {return e.date})\r\n\r\n    // Возвращает массив в формате [18, 21, 22, 25, 26, 29, 30, 31]\r\n    let testComparisom = history\r\n        .map((e) => {\r\n            let a = e.match(regDay)\r\n            let rawNum = a[1]\r\n            let num = Number(rawNum)\r\n            return num\r\n        })\r\n\r\n    // выбирает подходящие элементы, а затем удаляет пустые массивы. Это массив состоящий из массивов подходящих дней\r\n    let newTry = testComparisom\r\n        .map(function (firstDay, index, array) {\r\n            let pushh = [[1]]\r\n            let skipNumber = 0\r\n            index += skipNumber\r\n            for (let m = 1, i = array[index]; !pushh[pushh.length - 1].includes(firstDay) && firstDay === array[index + m] - 1;) {\r\n                let secondDay = array[index + m]\r\n                pushh.push(firstDay)\r\n                pushh.push(secondDay)\r\n                for (let y = 1, nextDays = array[index + y]; nextDays === array[index + y + 1] - 1; y++, nextDays++) {\r\n                    pushh.push(array[index + y + 1])\r\n                    skipNumber = y\r\n                }\r\n                return pushh\r\n            }\r\n        }\r\n        )\r\n        .filter(function (value, index, self) {\r\n            return self.indexOf(value) === index;\r\n        })\r\n        .filter(function (firstDay) {\r\n            return firstDay !== undefined\r\n        })\r\n\r\n    const arrLengths = []\r\n\r\n    for (let i = 0; i < newTry.length; i++) {\r\n        arrLengths.push(newTry[i].length)\r\n    }\r\n\r\n    let theGreatest = 0\r\n\r\n    for (let i = 0; i < arrLengths.length; i++) {\r\n        if (arrLengths[i] > theGreatest) {\r\n            theGreatest = arrLengths[i]\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return history.length !== 0 ? <div className=\"backing fields historyElems\">\r\n        <h3>Ваш рекорд медитации:</h3>\r\n        <h2> {theGreatest} дней </h2>\r\n    </div> \r\n    :\r\n    <div></div>\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default HighScoreMeditation","import React from \"react\"\r\n\r\n\r\nfunction HistoryElement({sessionsHistory}) {\r\n    let historyElement = sessionsHistory.map(\r\n        (el) => {\r\n            if (sessionsHistory.indexOf(el) >= sessionsHistory.length - 3) {\r\n            return (                \r\n                <div className=\"backing fields historyElements\">\r\n                    <div>Длительность: {el.duration}</div>\r\n                    <div>Дата: {el.date}</div>\r\n                </div>\r\n            )}\r\n        })\r\n\r\n\r\n    return (\r\n        <div className=\"backing fields historyElems\">\r\n                    {(historyElement.length === 0) \r\n                        ? <h3>Начните медитировать, чтобы получить доступ к статистике</h3>\r\n                        : <div> {historyElement} </div> \r\n                    }\r\n                </div>\r\n)\r\n}\r\n\r\n\r\nexport default HistoryElement","import './Calendar.css'\r\nimport './../../backing.css'\r\n\r\nlet Calendar = (props) => {\r\n    let currentMonth = new Date().getMonth() + 1;\r\n    let currentYear = new Date().getFullYear();\r\n\r\n    let createCalendar = (selectedMonth, currentYear) => {\r\n\r\n        let isMore = (selectedMonth) => {\r\n            if (selectedMonth > 12) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n\r\n        let monthNames = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\r\n        let dayOfWeekArray = ['ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ', 'ВС']\r\n\r\n        let dayOfWeekElements = dayOfWeekArray.map((e) => {\r\n            return <div className='dayOfWeek'>{e}</div>\r\n        })\r\n\r\n        const getNumberOfDays = (y, m) => new Date(y, m, 0).getDate();\r\n        let numberOfDays = getNumberOfDays(currentYear, isMore(selectedMonth) ? 1 : selectedMonth)\r\n        let CalendarElements = []\r\n\r\n        for (let i = 1; i <= numberOfDays; i++) {\r\n            CalendarElements.push({day: i, month: selectedMonth, year: currentYear})\r\n        }\r\n\r\n        // делалась ли медитация в определённый день.\r\n        let filterObj = (e) => {\r\n            return props.sessionsHistory.some(function (obj) {\r\n                let year = e.year\r\n                let month = e.month;\r\n                let day = e.day\r\n                let lateDate = day + '.' + month + '.' + year\r\n                return (obj.date === lateDate)\r\n            })\r\n        }\r\n\r\n        const getDayOfWeek = (selectedMonth) => {\r\n            let date = new Date(currentYear, selectedMonth);\r\n            let dayOfWeek = date.getDay();\r\n            return dayOfWeek; \r\n        }\r\n\r\n        let blankFirstDays = getDayOfWeek(isMore(selectedMonth) ? 0 : selectedMonth - 1)\r\n\r\n        let monthName = monthNames[isMore(selectedMonth) ? 0 : selectedMonth - 1]\r\n\r\n        for (let i = 1; i < blankFirstDays; i++) {\r\n            CalendarElements.unshift('') // добавляет пустые клетки перед началом месяца\r\n        }\r\n\r\n        let dayElements = CalendarElements.map((e) => {\r\n            return <div className={filterObj(e) ? 'el active' : 'el'}> {e.day}</div>\r\n        })\r\n\r\n        let oneMonth = <div>           \r\n            <h2>{monthName}</h2>\r\n            <div className='one_Month'>\r\n                {dayOfWeekElements}\r\n                {dayElements}\r\n            </div>\r\n        </div>\r\n        return oneMonth\r\n    }\r\n\r\n    // проверяет не прошлый ли год\r\n    let checkLastYear = (prevM) => {\r\n        return prevM < 1\r\n    }\r\n\r\n    let previousMonth = currentMonth - 1\r\n    let monthBeforePrevious = currentMonth - 2\r\n    \r\n    let prevPrevMonth = createCalendar(checkLastYear(monthBeforePrevious) ? 12 : monthBeforePrevious, checkLastYear(monthBeforePrevious) ? currentYear - 1 : currentYear)\r\n    let prevMonth = createCalendar(checkLastYear(previousMonth) ? 12 : previousMonth, checkLastYear(previousMonth) ? currentYear - 1 : currentYear)\r\n    let ongoingMonth = createCalendar(currentMonth, currentYear)\r\n\r\n    return (\r\n        <div className='calendar_wrap'>\r\n            <div className='calendar_Header'>\r\n                <h1>КАЛЕНДАЛЬ</h1>\r\n            </div>\r\n\r\n            <div className='calendar_container'>\r\n                <div className='one_Month_container'>\r\n                    {prevPrevMonth}\r\n                </div>\r\n\r\n                <div className='one_Month_container'>\r\n                    {prevMonth}\r\n                </div>\r\n\r\n                <div className='one_Month_container'>\r\n                    {ongoingMonth}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar","import { connect } from 'react-redux'\r\nimport Calendar from './Calendar'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sessionsHistory: [...state.sessionsHistory],\r\n    }\r\n}\r\n\r\nconst CalendarContainer = connect(mapStateToProps)(Calendar)\r\n\r\nexport default CalendarContainer","import React from \"react\"\r\nimport AllTimeRecording from \"./AllTimeRecording/AllTimeRecording\"\r\nimport HighScoreMeditation from \"./HighScoreMeditation/HighScoreMeditation\"\r\nimport HistoryElement from \"./HistoryElement/HistoryElement\"\r\nimport './HistoryPage.css'\r\nimport TestCalendarContainer from \"./calendar/CalendarContainer\";\r\n\r\nfunction HistoryPage( {sessionsHistory, allTimeRecording} ) {\r\n        let currentMonth = new Date().getMonth() + 1;\r\n        let currentYear = new Date().getFullYear();\r\n\r\n        return (\r\n        <div>\r\n            <div className=\"infoDate\">\r\n            <div className='topPageElement'>\r\n            <HistoryElement sessionsHistory = {sessionsHistory} />\r\n            </div>\r\n\r\n                <div className='topPageElement'>\r\n            <HighScoreMeditation sessionsHistory = {sessionsHistory} />\r\n            </div>\r\n\r\n                <div className='topPageElement'>\r\n            <AllTimeRecording allTimeRecording = {allTimeRecording} />\r\n            </div>\r\n            </div>\r\n\r\n            <div>\r\n            <TestCalendarContainer currentMonth={currentMonth} currentYear={currentYear} />\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default HistoryPage","import { connect } from 'react-redux'\r\nimport HistoryPage from './HistoryPage'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sessionsHistory: [...state.sessionsHistory],\r\n        allTimeRecording: state.allTimeRecording,\r\n        \r\n    }\r\n}\r\n\r\nconst HistoryPageContainer = connect(mapStateToProps)(HistoryPage)\r\n\r\n\r\nexport default HistoryPageContainer;","export default __webpack_public_path__ + \"static/media/logo.225e92d8.png\";","import logo from './../../assets/images/logo.png'\r\nimport  './Header.css'\r\nimport { NavLink } from 'react-router-dom';\r\nimport {useState} from \"react\";\r\n\r\nconst Header = () => {\r\n\r\n  let [popupStatus, setPopupStatus] = useState('burgerPopUp')\r\n  let [hamb__fieldStatus, setHamb__fieldStatus] = useState('hamb__field')\r\n\r\n  let hambDivHandler =() => {\r\n    switch (popupStatus) {\r\n      case 'burgerPopUp':\r\n        setPopupStatus('burgerPopUp open')\r\n        setHamb__fieldStatus('hamb__field active')\r\n        break;\r\n      case 'burgerPopUp open':\r\n        setPopupStatus('burgerPopUp')\r\n        setHamb__fieldStatus('hamb__field')\r\n    }\r\n  }\r\n\r\n\r\n    return <div>\r\n      <nav className='header'>\r\n        <div className='burgerContainer'>\r\n          <div className='burgerNavbar__wrap'>\r\n            <div className='hamb' onClick={hambDivHandler}>\r\n              <div className={hamb__fieldStatus}>\r\n                <span className='bar'></span>\r\n                <span className='bar'></span>\r\n                <span className='bar'></span>\r\n              </div>\r\n            </div>\r\n            <NavLink to='/homepage/' ><img className='logoImg' src={logo}  /></NavLink>\r\n            <ul className='burgerMenu' >\r\n              <li><NavLink to='/signin/'>Войти</NavLink></li>\r\n              <li><NavLink to='/signup/'>Зарегистрироваться</NavLink></li>\r\n              <li><NavLink to='/homepage/' >Главная страница</NavLink></li>\r\n              <li><NavLink to='/historypage/' >Личный кабинет</NavLink></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <div className={popupStatus}><ul className='burgerMenu' id='burgerMenu'>\r\n        <li onClick={hambDivHandler}><NavLink to='/signin/'>Войти</NavLink></li>\r\n        <li onClick={hambDivHandler}><NavLink to='/signup/'>Регистрация</NavLink></li>\r\n        <li onClick={hambDivHandler}><NavLink to='/homepage/' >Главная страница</NavLink></li>\r\n        <li onClick={hambDivHandler}><NavLink to='/historypage/' >Личный кабинет</NavLink></li>\r\n      </ul></div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/sound.17bb04ea.mp3\";","import React, {useState} from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport './Button.css'\r\n\r\nlet Button = (props) => {\r\n\r\n        let buttonHandler = () => {\r\n            let timesecs = props.time\r\n            let time = timesecs * 60\r\n            props.setNewTimeLeft(time)\r\n            props.startTimer(time)\r\n            }\r\n        return <button disabled={false} className='btn timerDigit' onClick={buttonHandler} > {props.time}</button>\r\n\r\n}\r\n\r\n\r\nexport default Button","import React, { useEffect, useRef } from 'react' \r\nimport { useState } from 'react'\r\nimport './Display.css'\r\n\r\n        let Display = (props) => {\r\n\r\n            useEffect (() => {\r\n            \r\n                if (props.timeLeft === 0) {\r\n                    setIsTimeLeftOrExtraTime(true)\r\n                } else {\r\n                    setIsTimeLeftOrExtraTime(false)\r\n                }\r\n            })\r\n            \r\n            let [isTimeLeftOrExtraTime, setIsTimeLeftOrExtraTime] = useState(false)\r\n\r\n\r\n            let toMinAndSecs = function(digit) {\r\n                \r\n                        let rawHours = Math.floor(digit/60/60)\r\n                        let rawMins = Math.floor(digit/60) - (rawHours*60);\r\n                        let rawSecs = digit % 60\r\n                        if (rawSecs === 0) {\r\n                            rawSecs = '00'\r\n                        }\r\n                        if (rawHours === 0) {\r\n                            rawHours = ''\r\n                        }\r\n                        let rawDigit = rawHours + ' ' + rawMins + ' ' + rawSecs;\r\n                        \r\n                        return rawDigit\r\n                    } \r\n\r\n\r\n                if (props.timeLeft === null) {\r\n                    return <div className='display'> \r\n                    <div className='timerText'>\r\n                    <h1>Введите время</h1>\r\n                    </div>\r\n                    </div>\r\n                }\r\n                return <div className='display'> \r\n                <div className='timerText'>\r\n                <h1>Осталось времени:</h1> \r\n                </div>\r\n                {(isTimeLeftOrExtraTime) \r\n                ? <div className='timeLeft'><h2>+{toMinAndSecs(props.extraTime)}</h2> </div>   \r\n                : <div className='timeLeft'><h2> {toMinAndSecs(props.timeLeft)} </h2> </div>\r\n                } \r\n                </div>\r\n            \r\n        }\r\n\r\nexport default Display","export default __webpack_public_path__ + \"static/media/play-button.75e18dcf.png\";","export default __webpack_public_path__ + \"static/media/pause-button.50b4651b.png\";","import React from \"react\";\r\nimport './StartPauseBtn.css'\r\nimport StartBtn from './../../../assets/timer/play-button.png'\r\nimport PauseBtn from './../../../assets/timer/pause-button.png'\r\n\r\nlet StartPauseBtn = function (props) {\r\n\r\n    let clickHandler = () => {\r\n        let timesecs = props.addedTime; // c props.inputWindow.current.value могут быть проблемы\r\n        let time = timesecs * 60\r\n        props.startPauseResume(time)\r\n        props.setAddedTime('')\r\n    }\r\n\r\n    return <div> <img className=\"btn PauseStart\" src={props.timerIsOn\r\n        ? PauseBtn\r\n        : StartBtn\r\n    }\r\n    onClick={clickHandler}></img>\r\n\r\n    </div>\r\n}\r\n\r\n\r\nexport default StartPauseBtn","export default __webpack_public_path__ + \"static/media/stop-button.e51170ea.png\";","import React from \"react\";\r\nimport './StopBtn.css'\r\nimport stopBtn from './../../../assets/timer/stop-button.png'\r\n\r\n        let StopBtn = function(props) {\r\n               \r\n                return <div>\r\n\r\n                <img src={stopBtn} className=\"btn Stop\" onClick={() => props.openModal()}></img>\r\n                </div>      \r\n            }\r\n\r\n\r\nexport default StopBtn","import React, {useState} from \"react\";\r\nimport StartPauseBtn from \"./StartPauseBtn\";\r\nimport StopBtn from \"./StopBtn\";\r\nimport './TimeInput.css'\r\n\r\nlet TimeInput = function (props) {\r\n    let [addedTime, setAddedTime] = useState('')\r\n\r\n    let clickHandler = () => {\r\n        let timesecs = addedTime;\r\n        let time = timesecs * 60\r\n        props.startPauseResume(time)\r\n        setAddedTime('')\r\n    }\r\n\r\n    let onKeyUpHandler = (event) => {\r\n        if (event.keyCode === 13) {\r\n            clickHandler()\r\n        }\r\n    }\r\n\r\n    return <div className=\"backing timeInputWrapper\">\r\n        <div>\r\n            <input \r\n            className=\"timeInput\"\r\n            disabled={props.isDisabled}\r\n            type='number' \r\n            onKeyUp={onKeyUpHandler} \r\n            onChange={(e) => {\r\n                setAddedTime(e.target.value)}\r\n            }\r\n            min='1'\r\n            placeholder='Введите цифру'></input>\r\n        </div>\r\n\r\n    <div className=\"buttons backing startStop\">\r\n        <div>\r\n            <StartPauseBtn\r\n                startPauseResume={props.startPauseResume}\r\n                timerIsOn={props.timerIsOn}\r\n                addedTime={addedTime}\r\n                setAddedTime={setAddedTime}\r\n            />\r\n        </div>\r\n\r\n        <div>\r\n            <StopBtn\r\n                openModal={props.openModal}\r\n            />\r\n        </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\n\r\nexport default TimeInput","import React from \"react\";\r\nimport './Modal.css'\r\n\r\n        let Modal = function({modalActive, setModalActive, stopSave, stopNoSave}) {      \r\n                let save = () => {\r\n                        stopSave()\r\n                        setModalActive(false)\r\n                }\r\n\r\n                let noSave = () => {\r\n                        stopNoSave()\r\n                        setModalActive(false)\r\n                }\r\n                \r\n                return <div className={modalActive ? 'Modal active' : 'Modal'} onClick={() => {setModalActive(false)}}> \r\n                <div className='Modal__content' onClick={e => e.stopPropagation()}>\r\n                        <h2>Сохранить результат?</h2>\r\n                        <input type='button' name='saveOrNot' value='Да' onClick={save}/>\r\n                        <input type='button' name='saveOrNot' value='Нет' onClick={noSave}/>\r\n                </div>\r\n                </div>      \r\n            }\r\n\r\n\r\nexport default Modal","export default __webpack_public_path__ + \"static/media/Infinitely.64e3b9e0.mp3\";","import { createStore } from \"redux\";\r\nimport Infinitely from './../assets/sounds/Infinitely.mp3'\r\nimport Spatium from './../assets/sounds/Spatium.mp3'\r\nimport GreenTea from './../assets/sounds/Tea.mp3'\r\n\r\nconst initialState = {\r\n    timeLeft: null,\r\n    sessionsHistory: [],\r\n    allTimeRecording: 0,\r\n    autoplayIsOn: false,\r\n\r\n    \r\n    rawSongNames: [Infinitely, Spatium, GreenTea],\r\n    currentSong: Infinitely,\r\n    songIndex: 0,\r\n    timerIsOn: false,\r\n    pauseMusic: false\r\n}\r\n\r\nconst SET_NEW_TIMELEFT_AC = 'SET_NEW_TIMELEFT_AC'\r\nconst SET_NEW_SESSIONS_HISTORY_AC = 'SET_NEW_SESSIONS_HISTORY_AC'\r\nconst TURN_AUTOPLAY_ON_OFF_AC = 'TURN_AUTOPLAY_ON_OFF_AC'\r\nconst CHOOSE_CURRENT_SONG_AC = 'CHOOSE_CURRENT_SONG_AC'\r\nconst CHOOSE_SONG_INDEX_AC = 'CHOOSE_SONG_INDEX_AC'\r\nconst SET_IS_PLAYING_AC = 'SET_IS_PLAYING_AC'\r\nconst TIMER_IS_ON_AC = 'TIMER_IS_ON_AC'\r\nconst PAUSE_MUSIC_AC = 'PAUSE_MUSIC_AC'\r\nconst SET_ALL_TIME_RECORDING_AC = 'SET_ALL_TIME_RECORDING_AC'\r\n\r\nconst timerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_NEW_SESSIONS_HISTORY_AC: \r\n        return {...state, sessionsHistory: [...state.sessionsHistory, action.newRecord]}\r\n\r\n        case SET_NEW_TIMELEFT_AC:\r\n        return {...state, timeLeft: action.timeLeft}\r\n        \r\n        case TURN_AUTOPLAY_ON_OFF_AC:\r\n        return {...state, autoplayIsOn: action.autoplayIsOn}\r\n\r\n        case CHOOSE_CURRENT_SONG_AC:\r\n        return {...state, currentSong: action.currentSong}\r\n\r\n        case CHOOSE_SONG_INDEX_AC:\r\n        return {...state, songIndex: action.songIndex}\r\n\r\n        case TIMER_IS_ON_AC:\r\n        return {...state, timerIsOn: action.timerIsOn}\r\n    \r\n        case PAUSE_MUSIC_AC:\r\n        return {...state, pauseMusic: action.pauseMusic}\r\n    \r\n        case SET_ALL_TIME_RECORDING_AC:\r\n        return {...state, allTimeRecording: state.allTimeRecording + action.newRecord}\r\n    \r\n\r\n    }\r\n    return state;\r\n} \r\n\r\nexport const setNewTimeLeftAC = (newTimeLeft) => {\r\n    return {\r\n        type: SET_NEW_TIMELEFT_AC,\r\n        timeLeft: newTimeLeft\r\n    }\r\n}\r\n\r\nexport const chooseSongIndexAC = (newSongIndex) => {\r\n    return {\r\n        type: CHOOSE_SONG_INDEX_AC,\r\n        songIndex: newSongIndex\r\n    }\r\n}\r\n\r\n \r\nexport const setNewSessionsHistoryAC = (newDuration, newDate) => {\r\n    return {\r\n        type: SET_NEW_SESSIONS_HISTORY_AC,\r\n        newRecord: {duration: newDuration, date: newDate}\r\n    }\r\n}\r\n\r\n\r\nexport const turnAutoPlayOnOffAC = (autoplayStatus) => {\r\n    return {\r\n        type: TURN_AUTOPLAY_ON_OFF_AC,\r\n        autoplayIsOn: autoplayStatus\r\n    }\r\n}\r\n\r\nexport const chooseCurrentSongAC = (song) => {\r\n    return {\r\n        type: CHOOSE_CURRENT_SONG_AC,\r\n        currentSong: song\r\n    }\r\n}\r\n\r\nexport const pauseMusicAC = (pause) => {\r\n    return {\r\n        type: PAUSE_MUSIC_AC,\r\n        pauseMusic: pause\r\n    }\r\n}\r\n\r\nexport const timerIsOnAC = (timer) => {\r\n    return {\r\n        type: TIMER_IS_ON_AC,\r\n        timerIsOn: timer\r\n    }\r\n}\r\n\r\nexport const setAllTimeRecordingAC = (record) => {\r\n    return {\r\n        type: SET_ALL_TIME_RECORDING_AC,\r\n        newRecord: record\r\n    }\r\n}\r\n\r\n\r\nconst store = createStore(timerReducer)\r\n\r\nexport default store","export default __webpack_public_path__ + \"static/media/Spatium.1d5b2e2a.mp3\";","export default __webpack_public_path__ + \"static/media/Tea.e71ca058.mp3\";","import React, {useRef, useState} from 'react'\r\nimport sound from './../../../assets/sounds/sound.mp3'\r\nimport Button from '../Button/Button'\r\nimport Display from '../Display/Display'\r\nimport TimeInput from '../TimeInput/TimeInput'\r\nimport Modal from '../Modal/Modal'\r\nimport './Timer.css'\r\nimport './../../backing.css'\r\nimport {setNewTimeLeftAC} from \"../../../store/store\";\r\n\r\nlet TimerWrapper = (props) => {\r\n\r\n    let [timerIsOn, setTimerIsOn] = useState(false)\r\n    let [modalActive, setModalActive] = useState(false)\r\n    let [timerIsPaused, setTimerIsPaused] = useState(false)\r\n    let [extraTime, setExtraTime] = useState(0)\r\n    let [extraTimerID, setExtraTimerID] = useState(0)\r\n    let [timerIntervalID, setTimerIntervalID] = useState(0)\r\n    let [forStory, setForStory] = useState(null)\r\n\r\n    let extraTimer\r\n    let notif = useRef()\r\n    \r\n    let nowDate = new Date();\r\n    let year = nowDate.getFullYear();\r\n    let month = nowDate.getMonth() + 1;\r\n    let day = nowDate.getDate();\r\n    let lateDate = day + '.' + month + '.' + year\r\n\r\n    let extraTimerStarter =(decreasingTimeLeft)=> {\r\n        const newExtraTimerID = setInterval(() => {\r\n                setExtraTime(decreasingTimeLeft++)               \r\n        }, 1000)\r\n\r\n        setExtraTimerID(newExtraTimerID)\r\n    }\r\n\r\n\r\n    let startTimer = (timeLeft) => {\r\n        if (!timerIntervalID) {\r\n            props.setNewTimeLeft(timeLeft)\r\n            props.timerIsOn(true)\r\n            setTimerIsOn(true)\r\n            setForStory(timeLeft)\r\n            let decreasingTimeLeft = timeLeft\r\n            const newTimerID = setInterval(() => {\r\n                decreasingTimeLeft = decreasingTimeLeft - 1;\r\n                if (decreasingTimeLeft === 0) {\r\n                    props.setNewTimeLeft(decreasingTimeLeft)\r\n                    notif.current.play();\r\n                    extraTimerStarter(decreasingTimeLeft + 1)\r\n                    clearInterval(newTimerID)\r\n                    setTimerIntervalID(0)\r\n                    return\r\n                }\r\n                props.setNewTimeLeft(decreasingTimeLeft)\r\n            }, 1000)\r\n\r\n            setTimerIntervalID(newTimerID);\r\n            return\r\n        }\r\n        \r\n        clearInterval(timerIntervalID)\r\n        setTimerIntervalID(0)\r\n\r\n        }\r\n\r\n    let stopNoSave = () => {\r\n        stopTimer()\r\n        props.timerIsOn(false)\r\n        props.pauseMusic(true)\r\n    }\r\n\r\n    let stopSave = () => {\r\n        let forRecord = (forStory - props.timeLeft) + extraTime\r\n        props.setNewSessionsHistory(forRecord, lateDate)\r\n        props.setAllTimeRecording(forRecord)\r\n        stopTimer()\r\n        props.timerIsOn(false)\r\n    }\r\n\r\n    let openModal = () => {\r\n        if (timerIsOn === true || timerIsPaused === true) {\r\n            clearInterval(timerIntervalID)\r\n            setTimerIntervalID(0)\r\n\r\n            clearInterval(extraTimerID)\r\n            setExtraTimerID(0)\r\n    \r\n            setModalActive(true)\r\n        } else {\r\n            alert('Таймер не включён')\r\n        }\r\n    }\r\n\r\n    let stopTimer = () => {\r\n        props.setNewTimeLeft(null)\r\n\r\n        clearInterval(timerIntervalID)\r\n        setTimerIntervalID(0)\r\n\r\n        clearInterval(extraTimerID)\r\n        setExtraTimerID(0)\r\n        setTimerIsOn(false)\r\n    }\r\n\r\n    let pauseTimer = () => {\r\n        clearInterval(timerIntervalID)\r\n        setTimerIntervalID(0)\r\n\r\n        clearInterval(extraTimerID)\r\n        setExtraTimerID(0)\r\n        props.timerIsOn(false)\r\n    }\r\n\r\n    let resumeTimer = () => {\r\n        startTimer(props.timeLeft)\r\n    }\r\n\r\n    let startPauseResume = (time) => {\r\n        if (props.timeLeft === null) {\r\n            if (time <= 0) {\r\n                return alert('Введите положительное число')\r\n            }\r\n            props.setNewTimeLeft(time)\r\n            startTimer(time)\r\n            setTimerIsOn(true)\r\n        } else {\r\n            if (timerIsOn === true) {\r\n                pauseTimer(props.timeLeft)\r\n                setTimerIsOn(false)\r\n                setTimerIsPaused(true)\r\n            } else {\r\n                resumeTimer(props.timeLeft)\r\n                setTimerIsOn(true)\r\n                setTimerIsPaused(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    return <div className='timerWrapper'>\r\n\r\n        <div className='backing timerDisplayAndButtons'>\r\n            <div>\r\n                <Display timeLeft={props.timeLeft} extraTime={extraTime}/>\r\n            </div>\r\n\r\n            <div className='buttons'>\r\n                <Button time='10'\r\n                        isDisabled={timerIsOn}\r\n                        startTimer={startTimer}\r\n                        timer={timerIntervalID}\r\n                        setNewTimeLeft={props.setNewTimeLeft}/>\r\n                <Button time='15'\r\n                        startTimer={startTimer}\r\n                        timer={timerIntervalID}\r\n                        isDisabled={timerIsOn}\r\n                        setNewTimeLeft={props.setNewTimeLeft}/>\r\n                <Button time='30'\r\n                        startTimer={startTimer}\r\n                        timer={timerIntervalID}\r\n                        isDisabled={timerIsOn}\r\n                        setNewTimeLeft={props.setNewTimeLeft}/>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div className='timeInputComponent'>\r\n            <TimeInput\r\n                timer={timerIntervalID}\r\n                isDisabled={timerIsOn}\r\n                startPauseResume={startPauseResume}\r\n                timeLeft={props.timeLeft}\r\n                timerIsOn={timerIsOn}\r\n                openModal={openModal}\r\n            />\r\n        </div>\r\n\r\n        <div className='modalWindowComponent'>\r\n            <Modal modalActive={modalActive} setModalActive={setModalActive} stopSave={stopSave}\r\n                   stopNoSave={stopNoSave}/>\r\n\r\n        </div>\r\n        <audio ref={notif} preload='auto' src={sound}></audio>\r\n    </div>\r\n}\r\n\r\nexport default TimerWrapper;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport TestNewTimer from './Timer'\r\nimport {chooseSongIndexAC, chooseCurrentSongAC, timerIsOnAC, setNewTimeLeftAC, pauseMusicAC, setNewSessionsHistoryAC, setAllTimeRecordingAC} from './../../../store/store'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        timeLeft: state.timeLeft,\r\n        sessionsHistory: [...state.sessionsHistory],\r\n        currentSong: state.currentSong,\r\n        rawSongNames: [...state.rawSongNames],\r\n        songIndex: state.songIndex,\r\n        autoplayIsOn: state.autoplayIsOn,\r\n        allTimeRecording: state.allTimeRecording\r\n    }\r\n}\r\n\r\n\r\n    const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        chooseSongIndex: (index) => {\r\n            dispatch(chooseSongIndexAC(index))\r\n        },\r\n\r\n        chooseSong: (newSongIndex) => {\r\n            dispatch(chooseCurrentSongAC(newSongIndex))\r\n        },\r\n\r\n        timerIsOn: (timer) => {\r\n            dispatch(timerIsOnAC(timer))\r\n        },\r\n        \r\n        setNewTimeLeft: (newTimeLeft) => {\r\n            dispatch(setNewTimeLeftAC(newTimeLeft))\r\n        },\r\n\r\n        pauseMusic: (pause) => {\r\n            dispatch(pauseMusicAC(pause))\r\n        },\r\n\r\n        setNewSessionsHistory: (newDuration, newDate) => {\r\n            dispatch(setNewSessionsHistoryAC(newDuration, newDate))\r\n        },\r\n\r\n        setAllTimeRecording: (record) => {\r\n            dispatch(setAllTimeRecordingAC(record))\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst TimerContainer = connect(mapStateToProps, mapDispatchToProps)(TestNewTimer)\r\n\r\n\r\n\r\nexport default TimerContainer;","export default __webpack_public_path__ + \"static/media/play-button.96b68ae2.png\";","export default __webpack_public_path__ + \"static/media/next-button.d1151fb4.png\";","export default __webpack_public_path__ + \"static/media/back-button.10b44c1a.png\";","export default __webpack_public_path__ + \"static/media/pause-button.6a8dd9af.png\";","export default __webpack_public_path__ + \"static/media/stop-button.3070824d.png\";","export default __webpack_public_path__ + \"static/media/reload.7ef3c0a2.png\";","import './AudioPleer.css'\r\nimport './../../backing.css'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport btnPlay from './../../../assets/player/play-button.png'\r\nimport btnNext from './../../../assets/player/next-button.png'\r\nimport btnPrev from './../../../assets/player/back-button.png'\r\nimport btnPause from './../../../assets/player/pause-button.png'\r\nimport btnStop from './../../../assets/player/stop-button.png'\r\nimport btnReload from './../../../assets/player/reload.png'\r\n\r\n\r\nlet AudioPleer = (props) => {\r\n    useEffect(() => {\r\n        document.title = 'Медитация'\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (props.timerIsOn === true && props.autoplayIsOn === true) {\r\n            audioP.current.play();\r\n        } else {\r\n            audioP.current.pause();\r\n        }\r\n    }, [props.timerIsOn]);\r\n\r\n    useEffect(() => {\r\n        audioP.current.addEventListener('timeupdate', updateProgress)\r\n    });\r\n    useEffect(() => {\r\n        audioP.current.addEventListener('loadeddata', updateProgress)\r\n    });\r\n\r\n    useEffect(() => {\r\n        audioP.current.addEventListener('loadeddata', getFullDuration)\r\n    });\r\n\r\n    useEffect(() => {\r\n        prgrsCont.current.addEventListener('click', setProgress)\r\n    });\r\n\r\n    let [currentTime, setCurrentTime] = useState('0:00')\r\n    let [fullDuration, setFullDuration] = useState('0:00')\r\n    let [isPlaying, setIsPlaying] = useState(false)\r\n\r\n    let audioP = useRef()\r\n    let btn = useRef()\r\n    let prgrs = useRef()\r\n    let prgrsCont = useRef()\r\n\r\n    let playMusic = () => {\r\n        setIsPlaying(true)\r\n        audioP.current.play()\r\n    }\r\n\r\n    let pauseMusic = () => {\r\n        setIsPlaying(false)\r\n        audioP.current.pause()\r\n    }\r\n\r\n    let stopMusic = () => {\r\n        setIsPlaying(false)\r\n        audioP.current.pause()\r\n        audioP.current.currentTime = 0\r\n    }\r\n\r\n    let restartMusic = () => {\r\n        setIsPlaying(true)\r\n        audioP.current.pause()\r\n        audioP.current.currentTime = 0\r\n        audioP.current.play()\r\n    }\r\n\r\n    function playPause() {\r\n        if (!isPlaying) {\r\n            playMusic()\r\n            return\r\n        } \r\n        pauseMusic()   \r\n    }\r\n\r\n    const propersSongNames = props.rawSongNames.map((el) => {\r\n        let final = el.match(/[\\s\\S]+media\\/([^\\.]+)\\.[0-9a-zA-Z\\ ]+\\.mp3/)\r\n        let s = final[1]\r\n        return s\r\n    })\r\n\r\n    let prevSong = function () {\r\n        if (props.songIndex > 0) {        \r\n\r\n            let a = props.songIndex\r\n            props.increaseIndex(a - 1)\r\n            props.chooseSong(props.rawSongNames[a - 1])\r\n            stopMusic()\r\n            return\r\n        }\r\n        return false\r\n    }\r\n\r\n    let nextSong = function () {\r\n        \r\n        if (props.songIndex < 2) {\r\n            let a = props.songIndex\r\n            props.increaseIndex(a + 1)\r\n            props.chooseSong(props.rawSongNames[a + 1])\r\n            stopMusic()\r\n            return\r\n        }\r\n        \r\n        return false\r\n    }\r\n\r\n    let autoplay = () => {\r\n        if (props.autoplayIsOn) {\r\n            props.turnAutoPlayOnOff(false)\r\n        } else {\r\n            props.turnAutoPlayOnOff(true)\r\n        }\r\n    }\r\n\r\n    function redesingTime(secs) {\r\n        var hr = Math.floor(secs / 3600);\r\n        var min = Math.floor((secs - (hr * 3600)) / 60);\r\n        var sec = Math.floor(secs - (hr * 3600) - (min * 60));\r\n        if (sec < 10) {\r\n            sec = \"0\" + sec;\r\n        }\r\n        return min + ':' + sec;\r\n    }\r\n\r\n    // получает полную длительность\r\n    function getFullDuration(e) {\r\n        let durationRaw = e.target.duration\r\n        let duration = redesingTime(durationRaw);\r\n        setFullDuration(duration)\r\n    }\r\n\r\n    // обновляет текущую позицию (время)\r\n    function updateProgress(e) {\r\n        const { duration, currentTime } = e.target\r\n        const progressPercent = (currentTime / duration) * 100\r\n        prgrs.current.style.width = `${progressPercent}%`\r\n        let carrTime = redesingTime(audioP.current.currentTime.toString());\r\n        setCurrentTime(carrTime)\r\n    }\r\n\r\n    // установить позицию на прогрессбаре\r\n    function setProgress(e) {\r\n        const width = this.clientWidth\r\n        const clickX = e.offsetX\r\n        const duration = audioP.current.duration;\r\n        audioP.current.currentTime = (clickX / width) * duration\r\n    }\r\n\r\n    return (<div className='backing pleerWrapper'>\r\n        <div className='titleAndSwitcherWrapper'>\r\n            <h4 className='title'>Плеер</h4>\r\n        </div>\r\n        <div>\r\n            <h3 className='songName'>{propersSongNames[props.songIndex]}</h3>\r\n        </div>\r\n        <div className='buttons PrevNext'>\r\n            <img src={btnPrev} className='btn Prev' onClick={prevSong}></img>\r\n            <img src={btnNext} className='btn Next' onClick={nextSong}></img>\r\n        </div>\r\n\r\n        <audio ref={audioP} src={props.currentSong} preload loop></audio>\r\n\r\n\r\n        <div className='timeAndProgress'>\r\n            <div className='timeInfoWrapper'>\r\n                <div className=\"time current\">{currentTime}</div>\r\n                <div className=\"time duration\">{fullDuration}</div>\r\n            </div>\r\n            <div ref={prgrsCont} className='progressContainer'>\r\n                <div ref={prgrs} className='progress' /* style={{width: 60 + '%'}} */></div>\r\n            </div>\r\n        </div>\r\n        <div className='buttons PSR'>\r\n            <img src={isPlaying ? btnPause : btnPlay} className='btn Play' ref={btn} onClick={playPause}></img>\r\n            <img src={btnStop} className='btn Stop' onClick={stopMusic}></img>\r\n            <img src={btnReload} className='btn Restart' onClick={restartMusic}></img>\r\n        </div>\r\n\r\n        <div className='autoplaySwitch'> <h3 className={props.autoplayIsOn ? 'switcherText on' : 'switcherText off'} onClick={autoplay}>Автопроигрывание</h3>\r\n\r\n        </div>\r\n\r\n    </div>)\r\n}\r\n\r\n\r\nexport default AudioPleer","import { connect } from 'react-redux'\r\nimport AudioPleer from './AudioPleer'\r\nimport {chooseSongIndexAC, chooseCurrentSongAC, turnAutoPlayOnOffAC, pauseMusicAC} from './../../../store/store'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentSong: state.currentSong,\r\n        rawSongNames: [...state.rawSongNames],\r\n        songIndex: state.songIndex,\r\n        autoplayIsOn: state.autoplayIsOn,\r\n        timerIsOn: state.timerIsOn,\r\n        pauseMusic: state.pauseMusic,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        increaseIndex: (index) => {\r\n            dispatch(chooseSongIndexAC(index))\r\n        },\r\n\r\n        chooseSong: (newSongIndex) => {\r\n            dispatch(chooseCurrentSongAC(newSongIndex))\r\n        },\r\n\r\n        turnAutoPlayOnOff: (autoplayStatus) => {\r\n            dispatch(turnAutoPlayOnOffAC(autoplayStatus))\r\n        },\r\n\r\n        pauseMusic: (pause) => {\r\n            dispatch(pauseMusicAC(pause))\r\n        },\r\n    }\r\n}\r\n\r\nconst AudioPleerContainer = connect(mapStateToProps, mapDispatchToProps)(AudioPleer)\r\n\r\n\r\nexport default AudioPleerContainer","import React, { useState } from \"react\";\r\nimport TimerContainer from \"./timer/TimerContainer\";\r\nimport AudioPleerContainer from \"./AudioPleer/AudioPleerContainer\";\r\nimport './HomePage.css'\r\nimport './../btns.css'\r\n\r\nlet HomePage = function () {\r\n    let [pleerIsOn, setPleerIsOn] = useState(true)\r\n\r\n\r\n    return <div className='homePage'>\r\n        <div className=\"timerComponent\">\r\n        <TimerContainer />\r\n        </div>\r\n\r\n        <div className=\"timerElementsWrapper\">\r\n        <div className=\"btn playerOpener\">\r\n            <button onClick={() => {\r\n                pleerIsOn\r\n                    ? setPleerIsOn(false)\r\n                    : setPleerIsOn(true)\r\n            }\r\n            }>\r\n                {pleerIsOn\r\n                    ? 'Закрыть плеер'\r\n                    : 'Открыть плеер'\r\n                }\r\n            </button>\r\n        </div>\r\n\r\n        <div>\r\n            {pleerIsOn\r\n                ? <div className=\"TIIMER\"> <AudioPleerContainer setPleerIsOn={setPleerIsOn}  /> </div>\r\n                : <div>Плеер закрыт</div>\r\n            }\r\n        </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default HomePage","import './Signup.css'\r\n\r\nexport let SignUpPage = () => {\r\n    return <div className='signUpContainer'>\r\n        <div className='signUpTitleCont'>\r\n        <h1>Страница регистрации</h1>\r\n        </div>\r\n\r\n        <div className='signUpInputCont'>\r\n        <input type='text' placeholder='Логин'></input>\r\n        <input type='email' placeholder='Адрес почты'></input>\r\n        <input type='text' placeholder='Пароль'></input>\r\n        <input type='text' placeholder='Повторите пароль'></input>\r\n\r\n    \r\n        <button>Регистрация</button>\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n","import './SignIn.css'\r\n\r\nexport let SignInPage = () => {\r\n    return <div className='signUpContainer'>\r\n        <div className='signUpTitleCont'>\r\n        <h1>Страница входа</h1>\r\n        </div>\r\n\r\n        <div className='signUpInputCont'>\r\n        <input type='email' placeholder='Почта'></input>\r\n        <input type='text' placeholder='Пароль'></input>\r\n\r\n    \r\n        <button>Войти</button>\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n","import './App.css';\nimport {Route, Routes, HashRouter} from 'react-router-dom';\nimport HistoryPageContainer from './components/historypage/HistoryPageContainer';\nimport Header from './components/header/Header';\nimport HomePage from './components/homepage/HomePage';\nimport {SignUpPage} from './components/signup/Signup';\nimport {SignInPage} from './components/signin/SignIn';\n\n\nconst App = () => {\n  return (\n    <HashRouter >\n    <div className='bodyContainer'>\n    <div className='headerComponent'>\n      <Header />\n      </div>\n\n      <div className='mainContent'>\n      <Routes>\n      <Route path='' element={<HomePage />}  /> \n      <Route path='/homepage' element={<HomePage />}  /> \n      <Route path='/historypage' element={<HistoryPageContainer />} /> \n      <Route path='/signup' element={<SignUpPage />} /> \n      <Route path='/signin' element={<SignInPage />} /> \n       </Routes> \n    </div>\n  \n\n    </div>\n\n    </HashRouter>\n   \n  );\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from './store/store'\n\n\nReactDOM.render(\n  \n    <Provider store = {store} >\n\n      {/* сюда ли его? */}\n      <meta\nname=\"viewport\"\ncontent=\"width=device-width, initial-scale=1.0\"></meta>\n    <App />\n    </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}