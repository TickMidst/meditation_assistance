{"version":3,"sources":["components/historypage/AllTimeRecording/AllTimeRecording.js","components/historypage/calendar/Calendar.jsx","assets/sounds/infinitely.mp3","store/store.js","assets/sounds/Spatium.mp3","assets/sounds/green-tea.mp3","components/historypage/calendar/CalendarContainer.jsx","components/historypage/HighScoreMeditation/HighScoreMeditation.js","components/historypage/HistoryElement/HistoryElement.js","components/historypage/calendar/TestCalendar.jsx","components/historypage/calendar/TestCalendarContainer.jsx","components/historypage/HistoryPage.jsx","components/historypage/HistoryPageContainer.jsx","assets/images/logo.png","components/header/burgerMenu/HamburgerButton.js","components/header/Header.jsx","components/footer/Footer.jsx","assets/sounds/sound.mp3","components/homepage/Button/Button.jsx","components/homepage/Display/Display.jsx","assets/timer/play-button.png","assets/timer/pause-button.png","components/homepage/TimeInput/StartPauseBtn.jsx","assets/timer/stop-button.png","components/homepage/TimeInput/StopBtn.jsx","components/homepage/TimeInput/TimeInput.jsx","components/homepage/Modal/Modal.jsx","components/homepage/timer/Timer.jsx","components/homepage/timer/TimerContainer.jsx","assets/player/play-button.png","assets/player/next-button.png","assets/player/back-button.png","assets/player/pause-button.png","assets/player/stop-button.png","assets/player/reload.png","components/homepage/AudioPleer/AudioPleer.jsx","components/homepage/AudioPleer/AudioPleerContainer.jsx","components/homepage/HomePage.jsx","components/signup/Signup.jsx","App.js","reportWebVitals.js","index.js"],"names":["AllTimeRecording","allTimeRecording","className","Calendar","props","currentMonth","Date","getMonth","currentYear","getFullYear","createCalendar","selectedMonth","y","m","isMore","year","dayOfWeekEls","map","e","numberOfDaysNew","getDate","CalElements","i","push","day","month","filterObj","sessionsHistory","some","obj","lateDate","date","blankFirstDays","getDay","getDayOfWeek","monthName","unshift","elements","checkLastYear","prevM","nextM","prevMonth","ongoingMonth","nextMonth","checkNextYear","initialState","timeLeft","autoplayIsOn","rawSongNames","Infinitely","currentSong","songIndex","timerIsOn","isPlaying","pauseMusic","SET_NEW_TIMELEFT_AC","SET_NEW_SESSIONS_HISTORY_AC","TURN_AUTOPLAY_ON_OFF_AC","CHOOSE_CURRENT_SONG_AC","CHOOSE_SONG_INDEX_AC","SET_IS_PLAYING_AC","TIMER_IS_ON_AC","PAUSE_MUSIC_AC","SET_ALL_TIME_RECORDING_AC","chooseSongIndexAC","newSongIndex","type","chooseCurrentSongAC","song","pauseMusicAC","pause","store","createStore","state","action","newRecord","connect","dispatch","increaseIndex","index","chooseSong","HighScoreMeditation","regDay","newTry","rawNum","match","Number","firstDay","array","pushh","skipNumber","length","includes","secondDay","nextDays","filter","value","self","indexOf","undefined","console","log","arrLengths","theGreatest","HistoryElement","historyElement","el","duration","TestCalendar","TestCalendarContainer","HistoryPage","HistoryPageContainer","HamburgerButton","href","Header","to","src","logo","Footer","Button","disabled","onClick","time","setNewTimeLeft","startTimer","Display","isTimeLeftOrExtraTime","useEffect","toMinAndSecs","digit","rawHours","Math","floor","rawMins","rawSecs","extraTime","StartPauseBtn","PauseBtn","StartBtn","addedTime","startPauseResume","setAddedTime","StopBtn","stopBtn","openModal","TimeInput","useState","isDisabled","onKeyUp","event","keyCode","clickHandler","onChange","target","min","placeholder","Modal","modalActive","setModalActive","stopSave","stopNoSave","stopPropagation","name","TimerWrapper","extraTimer","timer","decreasingTimeLeft","setTimerIsOn","timerIsPaused","setTimerIsPaused","setExtraTime","setTimerInterval","notif","useRef","forStory","nowDate","clearInterval","setInterval","chann","stopTimer","alert","forRecord","setNewSessionsHistory","setAllTimeRecording","ref","preload","sound","TimerContainer","timerIsOnAC","newTimeLeft","setNewTimeLeftAC","newDuration","newDate","setNewSessionsHistoryAC","record","setAllTimeRecordingAC","AudioPleer","document","title","audioP","current","play","addEventListener","updateProgress","getFullDuration","prgrsCont","setProgress","currentTime","setCurrentTime","fullDuration","setFullDuration","btn","prgrs","restartMusic","setIsPlaying","propersSongNames","reskinTime","secs","hr","sec","progressPercent","style","width","carrTime","toString","this","clientWidth","clickX","offsetX","btnPrev","btnNext","loop","btnPause","btnPlay","btnStop","btnReload","turnAutoPlayOnOff","AudioPleerContainer","setIsPlayingAC","autoplayStatus","turnAutoPlayOnOffAC","HomePage","pleerIsOn","setPleerIsOn","SignUpPage","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","content","getElementById"],"mappings":"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","file":"static/js/main.dd3836e2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction AllTimeRecording ({allTimeRecording}) {\r\n    return (\r\n        <div className=\"backing fields AllTimeRecording\">\r\n    <h3>Проведено в медитации:</h3>\r\n    <h2> {allTimeRecording} </h2>\r\n    </div>\r\n    )}\r\n\r\n\r\nexport default AllTimeRecording","import './Calendar.css'\r\nimport './../../backing.css'\r\n\r\nlet Calendar = (props) => {\r\n    let currentMonth = new Date().getMonth() + 1;\r\n    let currentYear = new Date().getFullYear();\r\n\r\n    let createCalendar = (selectedMonth, currentYear) => {\r\n\r\n        let isMore = (selectedMonth) => {\r\n            if (selectedMonth > 12) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n\r\n        let monthNames = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\r\n        let dayOfWeekArr = ['ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ', 'ВС']\r\n\r\n        let year = currentYear\r\n\r\n        let dayOfWeekEls = dayOfWeekArr.map((e) => {\r\n            return <div className='dayOfWeek'>{e}</div>\r\n        })\r\n\r\n        const numberOfDays = (y, m) => new Date(y, m, 0).getDate();\r\n        let numberOfDaysNew = numberOfDays(currentYear, isMore(selectedMonth) ? 1 : selectedMonth) // возвращает 31, как в январе 2022\r\n        let CalElements = [] // 31 клетка\r\n\r\n        for (let i = 1; i <= numberOfDaysNew; i++) {\r\n            CalElements.push({ day: i, month: selectedMonth, year: currentYear })\r\n        }\r\n\r\n        // делалась ли медитация в определённый день.\r\n        let filterObj = (e) => {\r\n            return props.sessionsHistory.some(function (obj) {\r\n                let year = e.year\r\n                let month = e.month;\r\n                let day = e.day\r\n                let lateDate = day + '.' + month + '.' + year\r\n                return (obj.date === lateDate)\r\n            })\r\n        }\r\n\r\n        const getDayOfWeek = (selectedMonth) => {\r\n            let date = new Date(currentYear, selectedMonth);\r\n            let dayOfWeek = date.getDay();\r\n            return dayOfWeek; // цифра 6\r\n        }\r\n\r\n        let blankFirstDays = getDayOfWeek(isMore(selectedMonth) ? 0 : selectedMonth - 1)\r\n\r\n        let monthName = monthNames[isMore(selectedMonth) ? 0 : selectedMonth - 1]\r\n\r\n        for (let i = 1; i < blankFirstDays; i++) {\r\n            CalElements.unshift('') // добавляет 5 пустых клеток\r\n        }\r\n\r\n        let elements = CalElements.map((e) => {\r\n            return <div className={filterObj(e) ? 'el active' : 'el'}> {e.day}</div>\r\n        })\r\n\r\n        let oneMonth = <div>\r\n                        <h2>{year}</h2>\r\n            <h2>{monthName}</h2>\r\n            <div className='one_Month'>\r\n                {dayOfWeekEls}\r\n                {elements}\r\n            </div>\r\n        </div>\r\n        return oneMonth\r\n    }\r\n\r\n    // проверяет прошлый год\r\n    let checkLastYear = (prevM) => {\r\n        if (prevM < 1) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n    let prevM = currentMonth - 1\r\n\r\n    // проверяет следующий год\r\n    let checkNextYear = (nextM) => {\r\n        if (nextM > 12) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n    let nextM = currentMonth + 1\r\n\r\n    let prevMonth = createCalendar(checkLastYear(prevM) ? 12 : prevM, checkLastYear(prevM) ? currentYear - 1 : currentYear)\r\n    let ongoingMonth = createCalendar(currentMonth, currentYear)\r\n    let nextMonth = createCalendar(nextM, checkNextYear(nextM) ? currentYear + 1 : currentYear)\r\n\r\n    return (\r\n        <div>\r\n            <h1>КАЛЕНДАЛЬ</h1>\r\n\r\n            <div className='calendar_container'>\r\n                <div className='one_Month_container'>\r\n                    <div>\r\n                        {prevMonth}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='one_Month_container'>\r\n                    <div>\r\n                        {ongoingMonth}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='one_Month_container'>\r\n                    <div>\r\n                        {nextMonth}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar","export default __webpack_public_path__ + \"static/media/infinitely.64e3b9e0.mp3\";","import { createStore } from \"redux\";\r\nimport Infinitely from './../assets/sounds/infinitely.mp3'\r\nimport Spatium from './../assets/sounds/Spatium.mp3'\r\nimport green_tea from './../assets/sounds/green-tea.mp3'\r\n\r\nconst initialState = {\r\n    timeLeft: null,\r\n    sessionsHistory: [],\r\n    allTimeRecording: null,\r\n    autoplayIsOn: false,\r\n    rawSongNames: [Infinitely, Spatium, green_tea],\r\n    currentSong: Infinitely,\r\n    songIndex: 0,\r\n    timerIsOn: false,\r\n    isPlaying: false,\r\n    pauseMusic: false\r\n}\r\n\r\nconst SET_NEW_TIMELEFT_AC = 'SET_NEW_TIMELEFT_AC'\r\nconst SET_NEW_SESSIONS_HISTORY_AC = 'SET_NEW_SESSIONS_HISTORY_AC'\r\nconst TURN_AUTOPLAY_ON_OFF_AC = 'TURN_AUTOPLAY_ON_OFF_AC'\r\nconst CHOOSE_CURRENT_SONG_AC = 'CHOOSE_CURRENT_SONG_AC'\r\nconst CHOOSE_SONG_INDEX_AC = 'CHOOSE_SONG_INDEX_AC'\r\nconst SET_IS_PLAYING_AC = 'SET_IS_PLAYING_AC'\r\nconst TIMER_IS_ON_AC = 'TIMER_IS_ON_AC'\r\nconst PAUSE_MUSIC_AC = 'PAUSE_MUSIC_AC'\r\nconst SET_ALL_TIME_RECORDING_AC = 'SET_ALL_TIME_RECORDING_AC'\r\n\r\nconst timerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_NEW_SESSIONS_HISTORY_AC: \r\n        return {...state, sessionsHistory: [...state.sessionsHistory, action.newRecord]}\r\n\r\n        case SET_NEW_TIMELEFT_AC:\r\n        return {...state, timeLeft: action.timeLeft}\r\n        \r\n        case TURN_AUTOPLAY_ON_OFF_AC:\r\n        return {...state, autoplayIsOn: action.autoplayIsOn}\r\n\r\n        case CHOOSE_CURRENT_SONG_AC:\r\n        return {...state, currentSong: action.currentSong}\r\n\r\n        case CHOOSE_SONG_INDEX_AC:\r\n        return {...state, songIndex: action.songIndex}\r\n    \r\n        case SET_IS_PLAYING_AC:\r\n        return {...state, isPlaying: action.isPlaying}\r\n\r\n        case TIMER_IS_ON_AC:\r\n        return {...state, timerIsOn: action.timerIsOn}\r\n    \r\n        case PAUSE_MUSIC_AC:\r\n        return {...state, pauseMusic: action.pauseMusic}\r\n    \r\n        case SET_ALL_TIME_RECORDING_AC:\r\n        return {...state, allTimeRecording: state.allTimeRecording + action.newRecord}\r\n    \r\n\r\n    }\r\n    return state;\r\n} \r\n\r\nexport const setNewTimeLeftAC = (newTimeLeft) => {\r\n    return {\r\n        type: SET_NEW_TIMELEFT_AC,\r\n        timeLeft: newTimeLeft\r\n    }\r\n}\r\n\r\nexport const chooseSongIndexAC = (newSongIndex) => {\r\n    return {\r\n        type: CHOOSE_SONG_INDEX_AC,\r\n        songIndex: newSongIndex\r\n    }\r\n}\r\n\r\n \r\nexport const setNewSessionsHistoryAC = (newDuration, newDate) => {\r\n    return {\r\n        type: SET_NEW_SESSIONS_HISTORY_AC,\r\n        newRecord: {duration: newDuration, date: newDate}\r\n    }\r\n}\r\n\r\n\r\nexport const turnAutoPlayOnOffAC = (autoplayStatus) => {\r\n    return {\r\n        type: TURN_AUTOPLAY_ON_OFF_AC,\r\n        autoplayIsOn: autoplayStatus\r\n    }\r\n}\r\n\r\nexport const chooseCurrentSongAC = (song) => {\r\n    return {\r\n        type: CHOOSE_CURRENT_SONG_AC,\r\n        currentSong: song\r\n    }\r\n}\r\n\r\nexport const setIsPlayingAC = (isPlaying) => {\r\n    return {\r\n        type: SET_IS_PLAYING_AC,\r\n        isPlaying: isPlaying\r\n    }\r\n}\r\n\r\nexport const pauseMusicAC = (pause) => {\r\n    return {\r\n        type: PAUSE_MUSIC_AC,\r\n        pauseMusic: pause\r\n    }\r\n}\r\n\r\nexport const timerIsOnAC = (timer) => {\r\n    return {\r\n        type: TIMER_IS_ON_AC,\r\n        timerIsOn: timer\r\n    }\r\n}\r\n\r\nexport const setAllTimeRecordingAC = (record) => {\r\n    return {\r\n        type: SET_ALL_TIME_RECORDING_AC,\r\n        newRecord: record\r\n    }\r\n}\r\n\r\n\r\nconst store = createStore(timerReducer)\r\n\r\nexport default store","export default __webpack_public_path__ + \"static/media/Spatium.1d5b2e2a.mp3\";","export default __webpack_public_path__ + \"static/media/green-tea.e71ca058.mp3\";","import { connect } from 'react-redux'\r\nimport Calendar from './Calendar'\r\nimport {chooseSongIndexAC, chooseCurrentSongAC} from './../../../store/store'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sessionsHistory: [...state.sessionsHistory],\r\n        currentSong: state.currentSong,\r\n        rawSongNames: [...state.rawSongNames],\r\n        songIndex: state.songIndex\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        increaseIndex: (index) => {\r\n            dispatch(chooseSongIndexAC(index))\r\n        },\r\n\r\n        chooseSong: (newSongIndex) => {\r\n            dispatch(chooseCurrentSongAC(newSongIndex))\r\n        }\r\n    }\r\n}\r\n\r\nconst CalendarContainer = connect(mapStateToProps, mapDispatchToProps)(Calendar)\r\n\r\n\r\nexport default CalendarContainer","import React from \"react\";\r\nimport './HighScoreMeditation.css'\r\n\r\nfunction HighScoreMeditation(props) {\r\n    // Ваш рекорд медитации\r\n    const regDay = /(\\d{1,2})\\.[\\.0-9]+/\r\n\r\n    let toShtoNuzhno = ['18.1.2022', '21.1.2022', '22.1.2022', '25.1.2022', '26.1.2022', '28.1.2022', '29.1.2022', '30.1.2022', '31.1.2022', '32.1.2022', '33.1.2022', '34.1.2022', '35.1.2022', '36.1.2022', '13.1.2022', '14.1.2022', '39.1.2022', '40.1.2022', '41.1.2022', '42.1.2022',]\r\n\r\n\r\n    let history = props.sessionsHistory.map(e => {return e.date})\r\n\r\n    // Возвращает массив в формате [18, 21, 22, 25, 26, 29, 30, 31]\r\n    let testComparisom = history\r\n        .map((e) => {\r\n            let a = e.match(regDay)\r\n            let rawNum = a[1]\r\n            let num = Number(rawNum)\r\n            return num\r\n        })\r\n\r\n    // выбирает подходящие элементы, а затем удаляет пустые массивы. Это массив состоящий из массивов подходящих дней\r\n    let newTry = testComparisom\r\n        .map(function (firstDay, index, array) {\r\n            let pushh = [[1]]\r\n            let skipNumber = 0\r\n            index += skipNumber\r\n            for (let m = 1, i = array[index]; !pushh[pushh.length - 1].includes(firstDay) && firstDay === array[index + m] - 1;) {\r\n                let secondDay = array[index + m]\r\n                pushh.push(firstDay)\r\n                pushh.push(secondDay)\r\n                for (let y = 1, nextDays = array[index + y]; nextDays === array[index + y + 1] - 1; y++, nextDays++) {\r\n                    pushh.push(array[index + y + 1])\r\n                    skipNumber = y\r\n                }\r\n                return pushh\r\n            }\r\n        }\r\n        )\r\n        .filter(function (value, index, self) {\r\n            return self.indexOf(value) === index;\r\n        })\r\n        .filter(function (firstDay) {\r\n            return firstDay !== undefined\r\n        })\r\n\r\n    console.log(newTry)\r\n\r\n    const arrLengths = []\r\n\r\n    for (let i = 0; i < newTry.length; i++) {\r\n        arrLengths.push(newTry[i].length)\r\n    }\r\n\r\n    let theGreatest = 0\r\n\r\n    for (let i = 0; i < arrLengths.length; i++) {\r\n        if (arrLengths[i] > theGreatest) {\r\n            theGreatest = arrLengths[i]\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return <div className=\"backing fields HighScoreMeditation\">\r\n        <h3>Ваш рекорд медитации:</h3>\r\n        <h2> {theGreatest} дней </h2>\r\n    </div>\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default HighScoreMeditation","import React from \"react\"\r\n\r\n\r\nfunction HistoryElement({sessionsHistory}) {\r\n    let historyElement = sessionsHistory.map(\r\n        (el) => {\r\n            return (\r\n                <div className=\"backing fields\">\r\n                    <div>Длительность: {el.duration}</div>\r\n                    <div>Дата: {el.date}</div>\r\n                </div>\r\n            )\r\n        })\r\n\r\n    return (\r\n        <div className=\"backing fields\">\r\n                    {historyElement === true\r\n                        ? <div> {historyElement} </div>\r\n                        : <h2>Вы ещё не медитировали</h2>\r\n                    }\r\n                </div>\r\n)\r\n}\r\n\r\n\r\nexport default HistoryElement","import './TestCalendar.css'\r\nimport './../../backing.css'\r\n\r\nlet TestCalendar = (props) => {\r\n    let currentMonth = new Date().getMonth() + 1;\r\n    let currentYear = new Date().getFullYear();\r\n\r\n    let createCalendar = (selectedMonth, currentYear) => {\r\n\r\n        let isMore = (selectedMonth) => {\r\n            if (selectedMonth > 12) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n\r\n        let monthNames = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\r\n        let dayOfWeekArr = ['ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ', 'ВС']\r\n\r\n        let year = currentYear\r\n\r\n        let dayOfWeekEls = dayOfWeekArr.map((e) => {\r\n            return <div className='dayOfWeek'>{e}</div>\r\n        })\r\n\r\n        const numberOfDays = (y, m) => new Date(y, m, 0).getDate();\r\n        let numberOfDaysNew = numberOfDays(currentYear, isMore(selectedMonth) ? 1 : selectedMonth) // возвращает 31, как в январе 2022\r\n        let CalElements = [] // 31 клетка\r\n\r\n        for (let i = 1; i <= numberOfDaysNew; i++) {\r\n            CalElements.push({day: i, month: selectedMonth, year: currentYear})\r\n        }\r\n\r\n        // делалась ли медитация в определённый день.\r\n        let filterObj = (e) => {\r\n            return props.sessionsHistory.some(function (obj) {\r\n                let year = e.year\r\n                let month = e.month;\r\n                let day = e.day\r\n                let lateDate = day + '.' + month + '.' + year\r\n                return (obj.date === lateDate)\r\n            })\r\n        }\r\n\r\n        const getDayOfWeek = (selectedMonth) => {\r\n            let date = new Date(currentYear, selectedMonth);\r\n            let dayOfWeek = date.getDay();\r\n            return dayOfWeek; // цифра 6\r\n        }\r\n\r\n        let blankFirstDays = getDayOfWeek(isMore(selectedMonth) ? 0 : selectedMonth - 1)\r\n\r\n        let monthName = monthNames[isMore(selectedMonth) ? 0 : selectedMonth - 1]\r\n\r\n        for (let i = 1; i < blankFirstDays; i++) {\r\n            CalElements.unshift('') // добавляет 5 пустых клеток\r\n        }\r\n\r\n        let elements = CalElements.map((e) => {\r\n            return <div className={filterObj(e) ? 'el active' : 'el'}> {e.day}</div>\r\n        })\r\n\r\n        let oneMonth = <div>\r\n           \r\n            <h2>{monthName}</h2>\r\n            <div className='one_Month'>\r\n                {dayOfWeekEls}\r\n                {elements}\r\n            </div>\r\n        </div>\r\n        return oneMonth\r\n    }\r\n\r\n    // проверяет прошлый год\r\n    let checkLastYear = (prevM) => {\r\n        if (prevM < 1) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n    let prevM = currentMonth - 1\r\n\r\n    // проверяет следующий год\r\n    let checkNextYear = (nextM) => {\r\n        if (nextM > 12) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n    let nextM = currentMonth + 1\r\n\r\n    let prevMonth = createCalendar(checkLastYear(prevM) ? 12 : prevM, checkLastYear(prevM) ? currentYear - 1 : currentYear)\r\n    let ongoingMonth = createCalendar(currentMonth, currentYear)\r\n    let nextMonth = createCalendar(nextM, checkNextYear(nextM) ? currentYear + 1 : currentYear)\r\n\r\n    return (\r\n        <div>\r\n            <div className='calendar_Header'>\r\n                <h1>КАЛЕНДАЛЬ</h1>\r\n            </div>\r\n            <div className='calendar_container'>\r\n                <div className='one_Month_container'>\r\n                    {prevMonth}\r\n                </div>\r\n\r\n                <div className='one_Month_container'>\r\n                    {ongoingMonth}\r\n                </div>\r\n\r\n                <div className='one_Month_container'>\r\n                    {nextMonth}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestCalendar","import { connect } from 'react-redux'\r\nimport TestCalendar from './TestCalendar'\r\nimport {chooseSongIndexAC, chooseCurrentSongAC} from './../../../store/store'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sessionsHistory: [...state.sessionsHistory],\r\n        currentSong: state.currentSong,\r\n        rawSongNames: [...state.rawSongNames],\r\n        songIndex: state.songIndex\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        increaseIndex: (index) => {\r\n            dispatch(chooseSongIndexAC(index))\r\n        },\r\n\r\n        chooseSong: (newSongIndex) => {\r\n            dispatch(chooseCurrentSongAC(newSongIndex))\r\n        }\r\n    }\r\n}\r\n\r\nconst TestCalendarContainer = connect(mapStateToProps, mapDispatchToProps)(TestCalendar)\r\n\r\n\r\nexport default TestCalendarContainer","import React from \"react\"\r\nimport AllTimeRecording from \"./AllTimeRecording/AllTimeRecording\"\r\nimport CalendarContainer from \"./calendar/CalendarContainer\"\r\nimport HighScoreMeditation from \"./HighScoreMeditation/HighScoreMeditation\"\r\nimport HistoryElement from \"./HistoryElement/HistoryElement\"\r\nimport './HistoryPage.css'\r\nimport TestCalendarContainer from \"./calendar/TestCalendarContainer\";\r\n\r\nfunction HistoryPage( {sessionsHistory, allTimeRecording} ) {\r\n        let currentMonth = new Date().getMonth() + 1;\r\n        let currentYear = new Date().getFullYear();\r\n\r\n\r\n        return (\r\n        <div>\r\n\r\n            <div className=\"infoDate\">\r\n            <div className='topPageElement'>\r\n            <HistoryElement sessionsHistory = {sessionsHistory} />\r\n            </div>\r\n\r\n                <div className='topPageElement'>\r\n            <HighScoreMeditation sessionsHistory = {sessionsHistory} />\r\n            </div>\r\n\r\n                <div className='topPageElement'>\r\n            <AllTimeRecording allTimeRecording = {allTimeRecording} />\r\n            </div>\r\n            </div>\r\n\r\n            <div>\r\n            <TestCalendarContainer currentMonth={currentMonth} currentYear={currentYear} />\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default HistoryPage","import { connect } from 'react-redux'\r\nimport HistoryPage from './HistoryPage'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sessionsHistory: [...state.sessionsHistory],\r\n        allTimeRecording: state.allTimeRecording,\r\n        \r\n    }\r\n}\r\n\r\nconst HistoryPageContainer = connect(mapStateToProps)(HistoryPage)\r\n\r\n\r\n\r\nexport default HistoryPageContainer;","export default __webpack_public_path__ + \"static/media/logo.225e92d8.png\";","import './HamburgerButton.css'\r\n\r\n\r\nconst HamburgerButton = () => {\r\n\r\nreturn (\r\n<a href='#' className='menu-btn' >\r\n<span> </span>\r\n</a>)\r\n}\r\n\r\n\r\nexport default HamburgerButton","import logo from './../../assets/images/logo.png'\r\nimport  './Header.css'\r\nimport { NavLink } from 'react-router-dom';\r\nimport HamburgerButton from './burgerMenu/HamburgerButton'\r\n\r\nconst Header = () => {\r\n\r\n    return <header className='header'>\r\n\r\n    <div className='headerHeader'>\r\n      <div className='logoEl'>\r\n      <NavLink to='/homepage/' ><img className='logoImg' src={logo}  /></NavLink>\r\n      </div>\r\n\r\n    <HamburgerButton />\r\n\r\n\r\n      <div className='headerElements'>\r\n      <div className='itemSU'>\r\n        <NavLink to='/signup/'>Регистрация</NavLink>\r\n        </div>\r\n        <div className='itemSU'>\r\n        <NavLink to='/homepage/' >Главная страница</NavLink>\r\n        </div>\r\n\r\n        <div className='itemSU'>\r\n        <NavLink to='/historypage/' >Личный кабинет</NavLink>\r\n        </div>\r\n        </div>\r\n        </div>\r\n\r\n      </header> \r\n}\r\n\r\n\r\nexport default Header;","import  './Footer.css'\r\n\r\nconst Footer = () => {\r\n    return <div className='footerWrapper'>\r\n        подвал\r\n    </div>\r\n}\r\n\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/sound.17bb04ea.mp3\";","import React, {useState} from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport './Button.css'\r\n\r\nlet Button = (props) => {\r\n\r\n        let buttonHandler = () => {\r\n            let timesecs = props.time\r\n            let time = timesecs * 60\r\n            props.setNewTimeLeft(time)\r\n            props.startTimer(time)\r\n            }\r\n        return <button disabled={false} className='btn timerDigit' onClick={buttonHandler} > {props.time}</button>\r\n\r\n}\r\n\r\n\r\nexport default Button","import React, { useEffect, useRef } from 'react' \r\nimport './Display.css'\r\n\r\n        let Display = (props) => {\r\n            let isTimeLeftOrExtraTime = false\r\n\r\n            useEffect (() => {\r\n                if (props.timeLeft <= 0) {\r\n                    isTimeLeftOrExtraTime = true\r\n                } else {\r\n                    isTimeLeftOrExtraTime = false\r\n                }\r\n            })\r\n                  \r\n                let toMinAndSecs = function(digit) {\r\n                        let rawHours = Math.floor(digit/60/60)\r\n                        let rawMins = Math.floor(digit/60) - (rawHours*60);\r\n                        let rawSecs = digit % 60\r\n                        if (rawSecs === 0) {\r\n                            rawSecs = '00'\r\n                        }\r\n                        if (rawHours === 0) {\r\n                            rawHours = ''\r\n                        }\r\n                        let rawDigit = rawHours + ' ' + rawMins + ' ' + rawSecs;\r\n                        let rawDigitArray = [rawHours, ,rawMins, rawSecs]\r\n                        return rawDigit\r\n                    } \r\n\r\n\r\n                if (props.timeLeft === null) {\r\n                    return <div className='display'> \r\n                    <div className='timerText'>\r\n                    <h1>Введите время</h1>\r\n                    </div>\r\n                    </div>\r\n                }\r\n                return <div className='display'> \r\n                <div className='timerText'>\r\n                <h1>Осталось времени:</h1> \r\n                </div>\r\n                {(isTimeLeftOrExtraTime === true) \r\n                ? <div className='timeLeft'><h2>+{toMinAndSecs(props.extraTime)}</h2> </div>   \r\n                : <div className='timeLeft'><h2> {toMinAndSecs(props.timeLeft)} </h2> </div>\r\n                } \r\n                </div>\r\n            \r\n        }\r\n\r\nexport default Display","export default __webpack_public_path__ + \"static/media/play-button.75e18dcf.png\";","export default __webpack_public_path__ + \"static/media/pause-button.50b4651b.png\";","import React from \"react\";\r\nimport './StartPauseBtn.css'\r\nimport StartBtn from './../../../assets/timer/play-button.png'\r\nimport PauseBtn from './../../../assets/timer/pause-button.png'\r\n\r\nlet StartPauseBtn = function (props) {\r\n\r\n    let clickHandler = () => {\r\n        let timesecs = props.addedTime; // c props.inputWindow.current.value могут быть проблемы\r\n        let time = timesecs * 60\r\n        props.startPauseResume(time)\r\n        props.setAddedTime('')\r\n    }\r\n\r\n    return <div> <img className=\"btn PauseStart\" src={props.timerIsOn\r\n        ? PauseBtn\r\n        : StartBtn\r\n    }\r\n    onClick={clickHandler}></img>\r\n\r\n    </div>\r\n}\r\n\r\n\r\nexport default StartPauseBtn","export default __webpack_public_path__ + \"static/media/stop-button.e51170ea.png\";","import React from \"react\";\r\nimport './StopBtn.css'\r\nimport stopBtn from './../../../assets/timer/stop-button.png'\r\n\r\n        let StopBtn = function(props) {\r\n               \r\n                return <div>\r\n\r\n                <img src={stopBtn} className=\"btn Stop\" onClick={() => props.openModal()}></img>\r\n                </div>      \r\n            }\r\n\r\n\r\nexport default StopBtn","import React, {useState} from \"react\";\r\nimport StartPauseBtn from \"./StartPauseBtn\";\r\nimport StopBtn from \"./StopBtn\";\r\nimport './TimeInput.css'\r\n\r\nlet TimeInput = function (props) {\r\n    let [addedTime, setAddedTime] = useState('')\r\n\r\n    let clickHandler = () => {\r\n        let timesecs = addedTime;\r\n        let time = timesecs * 60\r\n        props.startPauseResume(time)\r\n        setAddedTime('')\r\n    }\r\n\r\n    let onKeyUpHandler = (event) => {\r\n        if (event.keyCode === 13) {\r\n            clickHandler()\r\n        }\r\n    }\r\n\r\n    return <div className=\"backing timeInputWrapper\">\r\n        <div>\r\n            <input \r\n            className=\"timeInput\"\r\n            disabled={props.isDisabled}\r\n            type='number' \r\n            onKeyUp={onKeyUpHandler} \r\n            onChange={(e) => {\r\n                setAddedTime(e.target.value)}\r\n            }\r\n            min='1'\r\n            placeholder='Введите цифру'></input>\r\n        </div>\r\n\r\n    <div className=\"buttons backing startStop\">\r\n        <div>\r\n            <StartPauseBtn\r\n                startPauseResume={props.startPauseResume}\r\n                timerIsOn={props.timerIsOn}\r\n                addedTime={addedTime}\r\n                setAddedTime={setAddedTime}\r\n            />\r\n        </div>\r\n\r\n        <div>\r\n            <StopBtn\r\n                openModal={props.openModal}\r\n            />\r\n        </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\n\r\nexport default TimeInput","import React from \"react\";\r\nimport './Modal.css'\r\n\r\n        let Modal = function({modalActive, setModalActive, stopSave, stopNoSave}) {      \r\n                let save = () => {\r\n                        stopSave()\r\n                        setModalActive(false)\r\n                }\r\n\r\n                let noSave = () => {\r\n                        stopNoSave()\r\n                        setModalActive(false)\r\n                }\r\n                \r\n                return <div className={modalActive ? 'Modal active' : 'Modal'} onClick={() => {setModalActive(false)}}> \r\n                <div className='Modal__content' onClick={e => e.stopPropagation()}>\r\n                        <h2>Сохранить результат?</h2>\r\n                        <input type='button' name='saveOrNot' value='Да' onClick={save}/>\r\n                        <input type='button' name='saveOrNot' value='Нет' onClick={noSave}/>\r\n                </div>\r\n                </div>      \r\n            }\r\n\r\n\r\nexport default Modal","import React, {useRef, useState} from 'react'\r\nimport sound from './../../../assets/sounds/sound.mp3'\r\nimport Button from '../Button/Button'\r\nimport Display from '../Display/Display'\r\nimport TimeInput from '../TimeInput/TimeInput'\r\nimport Modal from '../Modal/Modal'\r\nimport './Timer.css'\r\nimport './../../backing.css'\r\nimport {setNewTimeLeftAC} from \"../../../store/store\";\r\n\r\nlet TimerWrapper = (props) => {\r\n\r\n    let [timerIsOn, setTimerIsOn] = useState(false)\r\n    let [modalActive, setModalActive] = useState(false)\r\n    let [timerIsPaused, setTimerIsPaused] = useState(false)\r\n    let [extraTime, setExtraTime] = useState(0)\r\n    let [timerInterval, setTimerInterval] = useState(null)\r\n\r\n    let extraTimer\r\n    let notif = useRef()\r\n    let forStory = null;\r\n\r\n\r\n    let nowDate = new Date();\r\n    let year = nowDate.getFullYear();\r\n    let month = nowDate.getMonth() + 1;\r\n    let day = nowDate.getDate();\r\n    let lateDate = day + '.' + month + '.' + year\r\n\r\n\r\n\r\n    let timer\r\n\r\n\r\n    let startTimer = (timeLeft) => {\r\n        if (!timer) {\r\n            props.setNewTimeLeft(timeLeft)\r\n            setTimerIsOn(true)\r\n            forStory = timeLeft;\r\n            let decreasingTimeLeft = timeLeft\r\n            timer = setInterval(() => {\r\n                decreasingTimeLeft = decreasingTimeLeft - 1;\r\n                // if (decreasingTimeLeft === 0) {\r\n                //     notif.current.play();\r\n                //      extraTimerStarter()\r\n                //     clearInterval(timer);\r\n                //  }\r\n                props.setNewTimeLeft(decreasingTimeLeft)\r\n            }, 1000)\r\n        }  else {timer = clearInterval(timer)}\r\n        }\r\n\r\n    let copy = (timeLeft) => {\r\n        if (!timer) {\r\n            props.setNewTimeLeft(timeLeft)\r\n            setTimerIsOn(true)\r\n            forStory = timeLeft;\r\n            let decreasingTimeLeft = timeLeft\r\n            timer = setInterval(() => {\r\n                decreasingTimeLeft = decreasingTimeLeft - 1;\r\n                // if (decreasingTimeLeft === 0) {\r\n                //     notif.current.play();\r\n                //      extraTimerStarter()\r\n                //     clearInterval(timer);\r\n                //  }\r\n                props.setNewTimeLeft(decreasingTimeLeft)\r\n            }, 1000)\r\n        }  else {timer = clearInterval(timer)\r\n        }\r\n    }\r\n\r\n    let decreasingTimeLeft\r\n\r\n    let chann = () => {\r\n        console.log(decreasingTimeLeft)\r\n}\r\n\r\n    let preChann = (timeLeft) => {\r\n        props.setNewTimeLeft(timeLeft)\r\n        setTimerIsOn(true)\r\n        forStory = timeLeft;\r\n        decreasingTimeLeft = timeLeft\r\n    }\r\n\r\n\r\n    function showAlert (){\r\n        timer = setInterval(chann, 1000)\r\n    }\r\n\r\n    function disableAlert(){\r\n        clearInterval(timer)\r\n        setTimerIsOn(false)\r\n    }\r\n\r\n\r\n    let stopNoSave = () => {\r\n        stopTimer()\r\n        props.timerIsOn(false)\r\n        props.pauseMusic(true)\r\n    }\r\n\r\n    let stopSave = () => {\r\n        let forRecord = (forStory - props.timeLeft) + extraTime\r\n        props.setNewSessionsHistory(forRecord, lateDate)\r\n        props.setAllTimeRecording(forRecord)\r\n        stopTimer()\r\n        props.timerIsOn(false)\r\n        alert('История сохранена!')\r\n\r\n    }\r\n\r\n    let openModal = () => {\r\n        if (timerIsOn === true || timerIsPaused === true) {\r\n            setTimerInterval(null)\r\n            clearInterval(extraTimer)\r\n            extraTimer = null\r\n            setModalActive(true)\r\n        } else {\r\n            alert('Таймер не включён')\r\n        }\r\n    }\r\n\r\n    let stopTimer = () => {\r\n        props.setNewTimeLeft(null)\r\n        clearInterval(timer)\r\n        clearInterval(extraTimer)\r\n        extraTimer = null\r\n        setExtraTime(0)\r\n    }\r\n\r\n    let pauseTimer = () => {\r\n        clearInterval(timer)\r\n        timer=setInterval(()=>{console.log('s')}, 1000)\r\n    }\r\n\r\n    let resumeTimer = () => {\r\n        startTimer(props.timeLeft)\r\n    }\r\n\r\n    let startPauseResume = (time) => {\r\n        if (props.timeLeft === null) {\r\n            if (time <= 0) {\r\n                return alert('Введите положительное число')\r\n            }\r\n            props.setNewTimeLeft(time)\r\n            startTimer(time)\r\n            setTimerIsOn(true)\r\n        } else {\r\n            if (timerIsOn === true) {\r\n                pauseTimer(props.timeLeft)\r\n                setTimerIsOn(false)\r\n                setTimerIsPaused(true)\r\n            } else {\r\n                resumeTimer(props.timeLeft)\r\n                setTimerIsOn(true)\r\n                setTimerIsPaused(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    return <div className='timerWrapper'>\r\n\r\n        <div className='backing timerDisplayAndButtons'>\r\n            <div>\r\n                <Display timeLeft={props.timeLeft} extraTime={extraTime}/>\r\n            </div>\r\n\r\n            <button onClick={()=> {\r\n                preChann(10)\r\n                showAlert()\r\n            }}>Включить</button>\r\n            <button onClick={disableAlert}>Выключить</button>\r\n            <div className='buttons'>\r\n                <Button time='1'\r\n                        isDisabled={timerIsOn}\r\n                        startTimer={startTimer}\r\n                        timer={timer}\r\n                        setNewTimeLeft={props.setNewTimeLeft}/>\r\n                <Button time='10'\r\n                        startTimer={startTimer}\r\n                        timer={timer}\r\n                        isDisabled={timerIsOn}\r\n                        setNewTimeLeft={props.setNewTimeLeft}/>\r\n                <Button time='15'\r\n                        startTimer={startTimer}\r\n                        timer={timer}\r\n                        isDisabled={timerIsOn}\r\n                        setNewTimeLeft={props.setNewTimeLeft}/>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div className='timeInputComponent'>\r\n            <TimeInput\r\n                timer={timer}\r\n                isDisabled={timerIsOn}\r\n                startPauseResume={startPauseResume}\r\n                timeLeft={props.timeLeft}\r\n                timerIsOn={timerIsOn}\r\n                openModal={openModal}\r\n            />\r\n        </div>\r\n\r\n        <div className='modalWindowComponent'>\r\n            <Modal modalActive={modalActive} setModalActive={setModalActive} stopSave={stopSave}\r\n                   stopNoSave={stopNoSave}/>\r\n\r\n        </div>\r\n        <audio ref={notif} preload='auto' src={sound}></audio>\r\n    </div>\r\n}\r\n\r\nexport default TimerWrapper;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport TimerWrapper from './Timer'\r\nimport {chooseSongIndexAC, chooseCurrentSongAC, timerIsOnAC, setNewTimeLeftAC, pauseMusicAC, setNewSessionsHistoryAC, setAllTimeRecordingAC} from './../../../store/store'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        timeLeft: state.timeLeft,\r\n        sessionsHistory: [...state.sessionsHistory],\r\n        currentSong: state.currentSong,\r\n        rawSongNames: [...state.rawSongNames],\r\n        songIndex: state.songIndex,\r\n        autoplayIsOn: state.autoplayIsOn,\r\n        allTimeRecording: state.allTimeRecording\r\n    }\r\n}\r\n\r\n\r\n    const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        increaseIndex: (index) => {\r\n            dispatch(chooseSongIndexAC(index))\r\n        },\r\n\r\n        chooseSong: (newSongIndex) => {\r\n            dispatch(chooseCurrentSongAC(newSongIndex))\r\n        },\r\n\r\n        timerIsOn: (timer) => {\r\n            dispatch(timerIsOnAC(timer))\r\n        },\r\n        \r\n        setNewTimeLeft: (newTimeLeft) => {\r\n            dispatch(setNewTimeLeftAC(newTimeLeft))\r\n        },\r\n\r\n        pauseMusic: (pause) => {\r\n            dispatch(pauseMusicAC(pause))\r\n        },\r\n\r\n        setNewSessionsHistory: (newDuration, newDate) => {\r\n            dispatch(setNewSessionsHistoryAC(newDuration, newDate))\r\n        },\r\n\r\n        setAllTimeRecording: (record) => {\r\n            dispatch(setAllTimeRecordingAC(record))\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst TimerContainer = connect(mapStateToProps, mapDispatchToProps)(TimerWrapper)\r\n\r\n\r\n\r\nexport default TimerContainer;","export default __webpack_public_path__ + \"static/media/play-button.96b68ae2.png\";","export default __webpack_public_path__ + \"static/media/next-button.d1151fb4.png\";","export default __webpack_public_path__ + \"static/media/back-button.10b44c1a.png\";","export default __webpack_public_path__ + \"static/media/pause-button.6a8dd9af.png\";","export default __webpack_public_path__ + \"static/media/stop-button.3070824d.png\";","export default __webpack_public_path__ + \"static/media/reload.7ef3c0a2.png\";","import './AudioPleer.css'\r\nimport './../../backing.css'\r\nimport React, { useEffect, useRef, useState } from 'react' \r\nimport btnPlay from './../../../assets/player/play-button.png'\r\nimport btnNext from './../../../assets/player/next-button.png'\r\nimport btnPrev from './../../../assets/player/back-button.png'\r\nimport btnPause from './../../../assets/player/pause-button.png'\r\nimport btnStop from './../../../assets/player/stop-button.png'\r\nimport btnReload from './../../../assets/player/reload.png'\r\n\r\n\r\nlet AudioPleer = (props) => {\r\n    useEffect(() => {\r\n        document.title = 'Медитация'\r\n    })\r\n\r\n\r\n      useEffect(() => {\r\n        if (props.timerIsOn === true && props.autoplayIsOn === true) {\r\n            audioP.current.play();\r\n        } else {\r\n            audioP.current.pause();\r\n        }\r\n      }, [props.timerIsOn]);\r\n      \r\n      useEffect(() => {\r\n        audioP.current.addEventListener('timeupdate', updateProgress)\r\n      });\r\n\r\n\r\n      useEffect(() => {\r\n        audioP.current.addEventListener('loadeddata', getFullDuration)\r\n      });\r\n\r\n      useEffect(() => {\r\n        prgrsCont.current.addEventListener('click', setProgress)\r\n      });\r\n\r\n\r\n\r\n    let [currentTime, setCurrentTime] = useState('0:00')\r\n    let [fullDuration, setFullDuration] = useState('0:00')\r\n\r\n\r\n    let audioP = useRef()\r\n    let btn = useRef()\r\n    let prgrs = useRef()\r\n    let prgrsCont = useRef()\r\n\r\n    let playMusic = () => {\r\n        props.setIsPlaying(true)\r\n        audioP.current.play()\r\n    }\r\n    \r\n    let pauseMusic = () => {\r\n        props.setIsPlaying(false)\r\n        audioP.current.pause()\r\n    }\r\n\r\n    let stopMusic = () => {\r\n        props.setIsPlaying(false)\r\n        audioP.current.pause()\r\n        audioP.current.currentTime = 0\r\n    }\r\n\r\n    let restartMusic = () => {\r\n        props.setIsPlaying(true)\r\n        audioP.current.pause()\r\n        audioP.current.currentTime = 0\r\n        audioP.current.play()\r\n    }\r\n\r\n    function playPause() {\r\n        if (!props.isPlaying) {\r\n            playMusic()\r\n        } else if (props.isPlaying) {\r\n            pauseMusic()\r\n        }\r\n    }\r\n\r\n    const propersSongNames = props.rawSongNames.map((el) => {\r\n        let final = el.match(/[\\s\\S]+media\\/([^\\.]+)\\.[0-9a-zA-Z\\ ]+\\.mp3/) \r\n        let s = final[1]\r\n        return s\r\n    }) \r\n\r\n    let prevSong = function() {  \r\n        if (props.songIndex > 0) {\r\n            props.increaseIndex(props.songIndex - 1)\r\n        } else if (props.songIndex === 0) {\r\n            return false\r\n        }\r\n        props.chooseSong(props.rawSongNames[props.songIndex])\r\n        restartMusic()\r\n    }\r\n \r\n    let nextSong = function() {\r\n        if (props.songIndex < 2) {\r\n            props.increaseIndex(props.songIndex + 1)\r\n        } else if (props.songIndex === 2) {\r\n            return false\r\n        }\r\n        props.chooseSong(props.rawSongNames[props.songIndex])\r\n        restartMusic()\r\n    }\r\n\r\n    let autoplay = () => {\r\n        if (props.autoplayIsOn) {\r\n            props.turnAutoPlayOnOff(false)\r\n        } else {\r\n            props.turnAutoPlayOnOff(true)\r\n        }\r\n    }\r\n\r\n// поменяй название reskinTime\r\nfunction reskinTime(secs) {\r\n        var hr = Math.floor(secs / 3600);\r\n        var min = Math.floor((secs - (hr * 3600)) / 60);\r\n        var sec = Math.floor(secs - (hr * 3600) - (min * 60));\r\n        if (sec < 10) {\r\n                sec = \"0\" + sec;\r\n        }\r\n        return min + ':' + sec;\r\n}\r\n\r\n// получает полную длительность\r\nfunction getFullDuration (e) {\r\n    let durationRaw = e.target.duration\r\n    let duration = reskinTime(durationRaw); \r\n    setFullDuration(duration)\r\n}\r\n\r\n// обновляет текущую позицию (время)\r\nfunction updateProgress (e) {\r\n    const {duration, currentTime} = e.target\r\n    const progressPercent = (currentTime / duration) * 100\r\n    prgrs.current.style.width = `${progressPercent}%`\r\n    let carrTime = reskinTime(audioP.current.currentTime.toString());\r\n    setCurrentTime(carrTime) \r\n}\r\n\r\n// установить позицию на прогрессбаре\r\nfunction setProgress (e) {\r\n    const width = this.clientWidth\r\n    const clickX = e.offsetX\r\n    const duration = audioP.current.duration;\r\n    audioP.current.currentTime = (clickX / width) * duration \r\n}\r\n\r\n    return (    <div className='backing pleerWrapper'>               \r\n                <div className='titleAndSwitcherWrapper'>\r\n                <h4 className='title'>Плеер</h4>\r\n                </div>\r\n                <div>\r\n                <h3 className='songName'>{propersSongNames[props.songIndex]}</h3>\r\n                </div>\r\n                <div className='buttons PrevNext'>\r\n                <img src={btnPrev} className='btn Prev' onClick={prevSong}></img>\r\n                <img src={btnNext} className='btn Next' onClick={nextSong}></img>\r\n                </div>\r\n\r\n                <audio ref={audioP} src={props.currentSong} preload  loop></audio>\r\n\r\n\r\n<div className='timeAndProgress'>\r\n    <div className='timeInfoWrapper'>\r\n<div className=\"time current\">{currentTime}</div>\r\n<div className=\"time duration\">{fullDuration}</div>\r\n</div>\r\n            <div ref={prgrsCont} className='progressContainer'>\r\n                    <div ref={prgrs} className='progress' /* style={{width: 60 + '%'}} */></div>\r\n            </div>\r\n            </div>\r\n                <div className='buttons PSR'>\r\n                <img src={props.isPlaying ? btnPause : btnPlay } className='btn Play' ref={btn} onClick={playPause}></img>\r\n                <img  src={btnStop} className='btn Stop' onClick={stopMusic}></img>\r\n                <img  src={btnReload} className='btn Restart' onClick={restartMusic}></img>\r\n                </div>\r\n\r\n                <div className='autoplaySwitch'> <h3 className= {props.autoplayIsOn ? 'switcherText on' : 'switcherText off' } onClick={autoplay}>Автопроигрывание</h3> \r\n                \r\n                 </div>\r\n                \r\n            </div>)    \r\n}\r\n\r\n\r\nexport default AudioPleer\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* \r\n<form>\r\n                <select id='trackSelect'\r\n                value={props.songIndex}\r\n                onChange={(e) => {\r\n                    let selectedSong = e.target.value;\r\n                    props.increaseIndex(selectedSong)\r\n                    props.chooseSong(props.rawSongNames[props.songIndex])\r\n                }}\r\n                >\r\n        <option value={0}>\r\n        {propersSongNames[0]}\r\n        </option>\r\n        <option value={1}>\r\n        {propersSongNames[1]}\r\n        </option>\r\n        <option value={2}>\r\n        {propersSongNames[2]}\r\n        </option>\r\n    </select>\r\n    </form> */}","import { connect } from 'react-redux'\r\nimport AudioPleer from './AudioPleer'\r\nimport {chooseSongIndexAC, chooseCurrentSongAC, setIsPlayingAC, turnAutoPlayOnOffAC, pauseMusicAC} from './../../../store/store'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentSong: state.currentSong,\r\n        rawSongNames: [...state.rawSongNames],\r\n        songIndex: state.songIndex,\r\n        isPlaying: state.isPlaying,\r\n        autoplayIsOn: state.autoplayIsOn,\r\n        timerIsOn: state.timerIsOn,\r\n        pauseMusic: state.pauseMusic,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        increaseIndex: (index) => {\r\n            dispatch(chooseSongIndexAC(index))\r\n        },\r\n\r\n        chooseSong: (newSongIndex) => {\r\n            dispatch(chooseCurrentSongAC(newSongIndex))\r\n        },\r\n\r\n        setIsPlaying: (isPlaying) => {\r\n            dispatch(setIsPlayingAC(isPlaying))\r\n        },\r\n\r\n        turnAutoPlayOnOff: (autoplayStatus) => {\r\n            dispatch(turnAutoPlayOnOffAC(autoplayStatus))\r\n        },\r\n\r\n        pauseMusic: (pause) => {\r\n            dispatch(pauseMusicAC(pause))\r\n        },\r\n    }\r\n}\r\n\r\nconst AudioPleerContainer = connect(mapStateToProps, mapDispatchToProps)(AudioPleer)\r\n\r\n\r\nexport default AudioPleerContainer","import React, { useState } from \"react\";\r\nimport TimerContainer from \"./timer/TimerContainer\";\r\nimport AudioPleerContainer from \"./AudioPleer/AudioPleerContainer\";\r\nimport './HomePage.css'\r\nimport './../btns.css'\r\n\r\nlet HomePage = function () {\r\n    let [pleerIsOn, setPleerIsOn] = useState(true)\r\n\r\n\r\n    return <div className='homePage'>\r\n        <div className=\"timerComponent\">\r\n        <TimerContainer />\r\n        </div>\r\n\r\n        <div className=\"timerElementsWrapper\">\r\n        <div className=\"btn playerOpener\">\r\n            <button onClick={() => {\r\n                pleerIsOn\r\n                    ? setPleerIsOn(false)\r\n                    : setPleerIsOn(true)\r\n            }\r\n            }>\r\n                {pleerIsOn\r\n                    ? 'Закрыть плеер'\r\n                    : 'Открыть плеер'\r\n                }\r\n            </button>\r\n        </div>\r\n\r\n        <div>\r\n            {pleerIsOn\r\n                ? <div className=\"TIIMER\"> <AudioPleerContainer setPleerIsOn={setPleerIsOn}  /> </div>\r\n                : <div>Плеер закрыт</div>\r\n            }\r\n        </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default HomePage","import './Signup.css'\r\n\r\nexport let SignUpPage = () => {\r\n    return <div className='signUpContainer'>\r\n        <div className='signUpTitleCont'>\r\n        <h1>Страница регистрации</h1>\r\n        </div>\r\n\r\n        <div className='signUpInputCont'>\r\n        <input type='text' placeholder='Имя'></input>\r\n        <input type='text' placeholder='Фамилия'></input>\r\n        <input type='email' placeholder='Адрес почты'></input>\r\n        <input type='text' placeholder='Пароль'></input>\r\n\r\n    \r\n        <button>Регистрация</button>\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n","import './App.css';\nimport { Route, BrowserRouter, Routes } from 'react-router-dom';\nimport HistoryPageContainer from './components/historypage/HistoryPageContainer';\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\nimport HomePage from './components/homepage/HomePage';\nimport {SignUpPage} from './components/signup/Signup';\n\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n    <div className='bodyContainer'>\n    <div className='headerComponent'>\n      <Header />\n      </div>\n\n      <div className='mainContent'>\n      <Routes>\n      <Route path='' element={<HomePage />}  /> \n      <Route path='/homepage' element={<HomePage />}  /> \n      <Route path='/historypage' element={<HistoryPageContainer />} /> \n      <Route path='/signup' element={<SignUpPage />} /> \n       </Routes> \n    </div>\n    \n    <div className='footerComponent'>\n    <Footer />\n    </div >\n\n    </div>\n\n    </BrowserRouter>\n   \n  );\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from './store/store'\n\n\nReactDOM.render(\n  \n    <Provider store = {store} >\n\n      {/* сюда ли его? */}\n      <meta\nname=\"viewport\"\ncontent=\"width=device-width, initial-scale=1.0\"></meta>\n    <App />\n    </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}